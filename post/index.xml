<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Edgar Cutar Junior</title>
    <link>/post/</link>
      <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 06 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/edgar.jpg</url>
      <title>Posts</title>
      <link>/post/</link>
    </image>
    
    <item>
      <title>Ajuste de modelos preditivos com o pacote {parsnip}</title>
      <link>/post/parsnip/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/parsnip/</guid>
      <description>


&lt;p&gt;Neste &lt;a href=&#34;https://www.linkedin.com/pulse/pr%C3%A9-processamento-de-dados-r-com-o-pacote-recipes-edgar-cutar-junior/&#34;&gt;segundo post da série sobre o Tidymodels&lt;/a&gt;, o conjunto de pacotes desenvolvido por &lt;a href=&#34;twitter.com/topepos&#34;&gt;Max Kuhn&lt;/a&gt; para ajuste de modelos preditivos para R, iremos falar sobre o &lt;a href=&#34;https://tidymodels.github.io/parsnip/&#34;&gt;{parsnip}&lt;/a&gt;. Esse post saiu quase todo da &lt;a href=&#34;https://tidymodels.github.io/parsnip/&#34;&gt;própria página do pacote parsnip&lt;/a&gt; assim como de posts do Max Kuhn no RStudio (notadamente &lt;a href=&#34;https://www.tidyverse.org/blog/2019/04/parsnip-internals/&#34;&gt;este&lt;/a&gt; e &lt;a href=&#34;https://www.tidyverse.org/blog/2018/11/parsnip-0-0-1/&#34;&gt;este&lt;/a&gt;). Todas as eventuais piadas ruins são minhas mesmo.&lt;/p&gt;
&lt;div id=&#34;cenouras-e-pastinagas&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cenouras e Pastinagas&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;Parsnip_vs_carrot.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Parsnip é o nome em inglês da pastinaga, parente esquecida da cenoura. Originalmente parsnip era o pacote que iria substituir o &lt;a href=&#34;http://caret.r-forge.r-project.org/&#34;&gt;{caret}&lt;/a&gt; (a pronúncia de caret é igual a “carrot”, cenoura em inglês), que foi o primeiro pacote integrado para modelagem preditiva para R, desenvolvido no começo dos anos 2000 pelo mesmo Max Kuhn, na época diretor de pesquisa não-clínica na Pfizer.&lt;/p&gt;
&lt;p&gt;Com a evolução do pacote, a ideia originaldo Parsnip acabou se desdobrando no conjunto de pacotes que compõem o {tidymodels}, cada um deles especializado em tarefas específicas da modelagem preditiva. Com isso &lt;a href=&#34;https://www.tidyverse.org/blog/2018/11/parsnip-0-0-1/&#34;&gt;Parsnip ficou com um problema bem específico, a interface.&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;uma-interface-padronizada&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Uma interface padronizada&lt;/h2&gt;
&lt;p&gt;Diversas funções e pacotes oferecem diferentes interfaces e parâmetros para objetivos parecidos, e o parsnip padroniza essa interface para o ajuste dos modelos e também para retornar os valores preditos.&lt;/p&gt;
&lt;div id=&#34;o-problema&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;O Problema&lt;/h3&gt;
&lt;p&gt;O problema de inconsistência de interface é facilmente encontrado em diversos modelos do R. Um exemplo simples acontece na regressão logística. Talvez o mais consagrado modo de &lt;a href=&#34;https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/glm&#34;&gt;ajustar uma regressão logística seja através do pacote &lt;code&gt;glm&lt;/code&gt;&lt;/a&gt;. Esse pacote usa a sintaxe padrão do R (&lt;a href=&#34;https://www.amazon.com.br/dp/B07737S8XJ/ref=dp-kindle-redirect?_encoding=UTF8&amp;amp;btkr=1&#34;&gt;que, na verdade, precede o R&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Para ajustar uma regressão logística no &lt;code&gt;glm&lt;/code&gt; você:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Usa o método da fórmula para definir as variáveis preditoras e o que deve ser predito.&lt;/li&gt;
&lt;li&gt;O método da fórmula usa o formato &lt;code&gt;Y ~ X1 + X2 + X3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Para especificar que é um modelo logístico usamos o argumento &lt;code&gt;family = binomial&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Agora vamos supor que eu queira aplicar alguma regularização nesse modelo. Uma escolha possível seria &lt;a href=&#34;https://cran.r-project.org/web/packages/glmnet/index.html&#34;&gt;usando o pacote &lt;code&gt;glmnet&lt;/code&gt;&lt;/a&gt;. Nesse caso:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Esse pacote não usa o método da fórmula, deve-se entregar os preditores em uma matriz (o que implica que variáveis “dummy” devem ser pré-computadas)&lt;/li&gt;
&lt;li&gt;O argumento da família muda ligeiramente, e deve ser &lt;code&gt;family = &#34;binomial&#34;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O problema seria ainda maior se eu tentasse usar a interface para o TensorFlow no pacote &lt;code&gt;keras&lt;/code&gt;. O &lt;code&gt;keras&lt;/code&gt; tem uma abordagem muito interessante para encadear modelos de Deep Learning mas a formulação é completamente diferente do tradicional. Ajustar um modelo usando &lt;code&gt;keras&lt;/code&gt; exigiria estudar e entender uma outra forma de sintaxe de modelos.&lt;/p&gt;
&lt;p&gt;O problema se estende a como os diferentes pacotes retornam predições. A maior parte dos pacotes em R usam a função &lt;code&gt;predict()&lt;/code&gt;. Para retornar um vetor de probabilidades na nossa regressão logística, usaríamos &lt;code&gt;predict(obj, newdata, type = &#34;response&#34;)&lt;/code&gt;. Mas essa convenção varia bastante entre pacotes.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Função&lt;/th&gt;
&lt;th&gt;Pacote&lt;/th&gt;
&lt;th&gt;Código&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;glm&lt;/td&gt;
&lt;td&gt;stats&lt;/td&gt;
&lt;td&gt;predict(obj, type = “response”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;lda&lt;/td&gt;
&lt;td&gt;MASS&lt;/td&gt;
&lt;td&gt;predict(obj)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;gbm&lt;/td&gt;
&lt;td&gt;gbm&lt;/td&gt;
&lt;td&gt;predict(obj, type = “response”, n.trees)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;mda&lt;/td&gt;
&lt;td&gt;mda&lt;/td&gt;
&lt;td&gt;predict(obj, type = “posterior”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;rpart&lt;/td&gt;
&lt;td&gt;rpart&lt;/td&gt;
&lt;td&gt;predict(obj, type = “prob”)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Weka&lt;/td&gt;
&lt;td&gt;RWeka&lt;/td&gt;
&lt;td&gt;predict(obj, type = “probability”)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Numa instância maior, podemos ter ainda mais problemas: alguns modelos podem criar predições em vários submodelos de uma vez. Quando usamos Boosted Trees ajustadas com &lt;em&gt;i&lt;/em&gt; árvores, podemos fazer uma predição usando menos de &lt;em&gt;i&lt;/em&gt; iterações (efetivamente criando um novo modelo de predição), o que pode levar a mais inconsistências.&lt;/p&gt;
&lt;p&gt;Esse tipo de problema, quando agregado, podia levar ao questionamento&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;O R está trabalhando pra mim ou eu estou trabalhando para o R?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div id=&#34;a-solução&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A solução&lt;/h3&gt;
&lt;p&gt;Para demonstrar como o &lt;code&gt;parsnip&lt;/code&gt; funciona, vamos seguir com o exemplo da regressão logística.&lt;/p&gt;
&lt;p&gt;Para isso vamos usar uma base de dados chamada &lt;code&gt;Smarket&lt;/code&gt;, do pacote ISLR, que tem os retornos diários do índice S&amp;amp;P500 entre 2001 e 2005. Vamos começar dividindo a base em treino e teste. Vamos centralizar e escalar usando uma receita simples do pacote &lt;code&gt;recipes&lt;/code&gt;&lt;a href=&#34;(https://www.linkedin.com/pulse/pr%C3%A9-processamento-de-dados-r-com-o-pacote-recipes-edgar-cutar-junior/)&#34;&gt;(falamos sobre esse pacote no último post)&lt;/a&gt;].&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(tidymodels, ISLR) 

split &amp;lt;- initial_split(Smarket %&amp;gt;% select(-Year, -Today), props = 9/10)
smarket_train &amp;lt;- training(split)
smarket_test  &amp;lt;- testing(split)

smarket_rec &amp;lt;- recipe(Direction ~ ., data = smarket_train) %&amp;gt;%
  step_center(all_predictors()) %&amp;gt;%
  step_scale(all_predictors()) %&amp;gt;%
  prep(training = smarket_train, retain = TRUE)

train_data &amp;lt;- juice(smarket_rec)
test_data  &amp;lt;- bake(smarket_rec, smarket_test)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para usar o &lt;code&gt;parsnip&lt;/code&gt;, você começa com a especificação de um modelo. É um objeto simples que define a intenção daquele modelo. Já que vamos seguir com nossa saga de regressão logística, nosso primeiro passo é uma função simples.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;market_model &amp;lt;- logistic_reg()
market_model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Logistic Regression Model Specification (classification)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pode parecer estranho porque não entramos com absolutamente nenhum detalhe sobre o que vamos fazer, mas é isso aí mesmo! O &lt;code&gt;parsnip&lt;/code&gt; oferece uma variedade de formas para ajustar esse modelo. Nós vamos usar o tradicional Método dos Mínimos Quadrados, mas poderia ser com penalização (via lasso, ridge, Bayes etc)… Diferenciamos um caso do outro através da &lt;em&gt;&lt;em&gt;Engine&lt;/em&gt; computacional&lt;/em&gt;, que é uma combinação de tipo de estimação com implementação. Pode ser através de um pacote ou uma plataforma como Spark ou TensorFlow. Para começar simples, vamos usar o glm.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_market_model &amp;lt;- market_model %&amp;gt;% set_engine(&amp;quot;glm&amp;quot;)
glm_market_model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Logistic Regression Model Specification (classification)
## 
## Computational engine: glm&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Não existem mais muitos argumentos por aqui, então vamos pular direto pro ajuste do modelo. Nossas duas escolhas nesse ponto são entre usar &lt;code&gt;fit()&lt;/code&gt; ou &lt;code&gt;fit_xy()&lt;/code&gt;. O primeiro usa o método da fórmula, enquanto o segundo usa objetos separados para os preditores e para o resultado.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_fit &amp;lt;- glm_market_model %&amp;gt;%
  fit(Direction ~ ., data = train_data)

#ou

glm_market_model %&amp;gt;%
  fit_xy(x = select(train_data, -Direction), y = select(train_data, Direction))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  20ms 
## 
## Call:  stats::glm(formula = formula, family = stats::binomial, data = data)
## 
## Coefficients:
## (Intercept)         Lag1         Lag2         Lag3         Lag4         Lag5  
##    0.103028    -0.133905    -0.043881     0.011143     0.002595     0.008425  
##      Volume  
##    0.047614  
## 
## Degrees of Freedom: 937 Total (i.e. Null);  931 Residual
## Null Deviance:       1298 
## Residual Deviance: 1293  AIC: 1307&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Claro que não é necessário fazer todos esses passos individualmente, e poderíamos simplesmente condensar tudo em um só objeto.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glm_fit &amp;lt;- logistic_reg() %&amp;gt;% 
  set_engine(&amp;quot;glm&amp;quot;) %&amp;gt;% 
  fit(Direction ~ ., data = train_data)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;mais-engines&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Mais engines!&lt;/h3&gt;
&lt;p&gt;O valor do &lt;code&gt;parsnip&lt;/code&gt; começa quando queremos testar diferentes &lt;em&gt;engines&lt;/em&gt;. Vamos usar o mesmo modelo e estimar os coeficientes através de estimativa Bayesiana usando &lt;code&gt;stan&lt;/code&gt;. Para isso só precisamos:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stan_model &amp;lt;- logistic_reg() %&amp;gt;% 
  set_engine(&amp;quot;stan&amp;quot;)

stan_model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Logistic Regression Model Specification (classification)
## 
## Computational engine: stan&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Para ajustar esse modelo, o &lt;code&gt;parsnip&lt;/code&gt; chamou a função &lt;code&gt;stan_glm()&lt;/code&gt; do pacote &lt;code&gt;rstanarm&lt;/code&gt;. Se você quiser passar argumentos para essa função, simplesmente adicione eles na função &lt;code&gt;set_engine()&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;stan_model &amp;lt;- logistic_reg() %&amp;gt;% 
  set_engine(&amp;quot;stan&amp;quot;, iter = 5000) 

stan_model&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Logistic Regression Model Specification (classification)
## 
## Engine-Specific Arguments:
##   iter = 5000
## 
## Computational engine: stan&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O modelo pode ser ajustado da mesma forma. &lt;code&gt;rstanarm&lt;/code&gt; printa &lt;em&gt;MUITAS&lt;/em&gt; informações ao ajustar um modelo. Isso pode ser útil para diagnóstico mas vamos excluir usando uma função de controle.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ctrl &amp;lt;- fit_control(verbosity = 0)

stan_fit &amp;lt;- stan_model %&amp;gt;%
    fit(Direction ~ ., data = train_data, control = ctrl)

stan_fit&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## parsnip model object
## 
## Fit time:  7.9s 
## stan_glm
##  family:       binomial [logit]
##  formula:      Direction ~ .
##  observations: 938
##  predictors:   7
## ------
##             Median MAD_SD
## (Intercept)  0.1    0.1  
## Lag1        -0.1    0.1  
## Lag2         0.0    0.1  
## Lag3         0.0    0.1  
## Lag4         0.0    0.1  
## Lag5         0.0    0.1  
## Volume       0.0    0.1  
## 
## ------
## * For help interpreting the printed output see ?print.stanreg
## * For info on the priors used see ?prior_summary.stanreg&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;predições&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Predições&lt;/h3&gt;
&lt;p&gt;Além das óbvias funcionalidades para ajustar diferentes modelos, ainda temos muitas vantagens na hora de prever resultados. Isso resolve uma série de frustrações como ter um arquivo predito que PULA algum resultado quando tem valores faltando, por exemplo, além de padronizar a função.&lt;/p&gt;
&lt;p&gt;Para regressões logísticas, por exemplo, o output é sempre um &lt;code&gt;tibble&lt;/code&gt; com uma coluna &lt;code&gt;.pred_class&lt;/code&gt; contendo a classe predita.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict(glm_fit, test_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 312 x 1
##    .pred_class
##    &amp;lt;fct&amp;gt;      
##  1 Down       
##  2 Up         
##  3 Up         
##  4 Up         
##  5 Down       
##  6 Up         
##  7 Up         
##  8 Up         
##  9 Down       
## 10 Up         
## # ... with 302 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict(stan_fit, test_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 312 x 1
##    .pred_class
##    &amp;lt;fct&amp;gt;      
##  1 Down       
##  2 Up         
##  3 Up         
##  4 Up         
##  5 Down       
##  6 Up         
##  7 Up         
##  8 Up         
##  9 Down       
## 10 Up         
## # ... with 302 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Isso facilita a união com os valores originais e o &lt;code&gt;.&lt;/code&gt; no nome é para evitar nomes duplicados.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;parsnip&lt;/code&gt; também trás diferentes tipos de previsão com uma interface padrão. Por exemplo, para estimativa de intervalos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict(glm_fit, test_data, type = &amp;quot;conf_int&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 312 x 4
##    .pred_lower_Down .pred_upper_Down .pred_lower_Up .pred_upper_Up
##               &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;          &amp;lt;dbl&amp;gt;
##  1            0.429            0.611          0.389          0.571
##  2            0.439            0.553          0.447          0.561
##  3            0.400            0.557          0.443          0.600
##  4            0.396            0.544          0.456          0.604
##  5            0.436            0.586          0.414          0.564
##  6            0.329            0.509          0.491          0.671
##  7            0.396            0.549          0.451          0.604
##  8            0.313            0.648          0.352          0.687
##  9            0.449            0.676          0.324          0.551
## 10            0.251            0.500          0.500          0.749
## # ... with 302 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ou para as probabilidades de cada previsão:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;predict(glm_fit, test_data, type = &amp;quot;prob&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 312 x 2
##    .pred_Down .pred_Up
##         &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
##  1      0.521    0.479
##  2      0.496    0.504
##  3      0.478    0.522
##  4      0.469    0.531
##  5      0.511    0.489
##  6      0.416    0.584
##  7      0.472    0.528
##  8      0.478    0.522
##  9      0.566    0.434
## 10      0.367    0.633
## # ... with 302 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;próximos-passos&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Próximos passos&lt;/h2&gt;
&lt;p&gt;Esse artigo apenas toca a superfície das possibilidades de uso do pacote &lt;code&gt;parsnip&lt;/code&gt;. Nos próximos artigos vamos explorar como fazer uma &lt;em&gt;grid search&lt;/em&gt; pelos melhores parâmetros, como fazer uma &lt;em&gt;k-fold Cross Validation&lt;/em&gt; usando esta interface e como avaliar a performance de modelos, tudo isso usando os tidymodels.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pré-processamento de dados com o pacote {recipes}</title>
      <link>/post/recipes/</link>
      <pubDate>Sun, 06 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/post/recipes/</guid>
      <description>


&lt;p&gt;Técnicas de pré-processamento de dados, também chamadas de &lt;em&gt;Feature Engineering&lt;/em&gt; são aquelas em que se adiciona, remove ou transforma a base de dados, tendo em vista a modelagem preditiva. Embora esse texto esteja primariamente preocupado com o &lt;strong&gt;como fazer&lt;/strong&gt;, é muito importante entender o porquê de se fazer cada uma destas transformações. Recomendo bastante os livros do &lt;a href=&#34;http://twitter.com/topepos&#34;&gt;Max Kuhn&lt;/a&gt;, Software Engineer do RStudio e autor do pacote &lt;code&gt;{recipes}&lt;/code&gt; de que vamos tratar hoje. Disponível online gratuitamente está o &lt;a href=&#34;http://www.feat.engineering/index.html&#34;&gt;&lt;em&gt;Feature Engineering and Selection&lt;/em&gt;&lt;/a&gt; e na ala paga está o maravilhoso &lt;a href=&#34;appliedpredictivemodeling.com/&#34;&gt;&lt;em&gt;Applied Predictive Modeling&lt;/em&gt;&lt;/a&gt;, além da &lt;a href=&#34;https://tidymodels.github.io/recipes&#34;&gt;página do pacote &lt;code&gt;{recipes}&lt;/code&gt;&lt;/a&gt; de onde muito desse post saiu.&lt;/p&gt;
&lt;p&gt;Cada tipo de modelo exige os dados mastigados de uma certa maneira. Modelos baseados em árvores (como &lt;a href=&#34;https://en.wikipedia.org/wiki/Random_forest&#34;&gt;Random Forests&lt;/a&gt; e &lt;a href=&#34;https://en.wikipedia.org/wiki/Gradient_boosting#Gradient_tree_boosting&#34;&gt;Boosted Trees&lt;/a&gt;) geralmente exigem pouco pré-processamento e podem lidar até com variáveis categóricas diretamente, enquanto outros algoritmos como &lt;a href=&#34;https://en.wikipedia.org/wiki/Support-vector_machine&#34;&gt;Support-Vector Machines&lt;/a&gt; e &lt;a href=&#34;https://en.wikipedia.org/wiki/Multivariate_adaptive_regression_spline&#34;&gt;Multivariate Adaptive Regression Splines (MARS)&lt;/a&gt; são mais exigentes com o formato com que recebem as variáveis preditoras para que funcionem corretamente. Um pré-processamento bem feito pode ser a diferença entre um modelo preditivo bem ou mal sucedido.&lt;/p&gt;
&lt;div id=&#34;o-pacote-recipes&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;O pacote &lt;code&gt;{recipes}&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;No começo dos anos 2000, Max Kuhn lançou o pacote &lt;code&gt;{caret}&lt;/code&gt; (caret é um anagrama para &lt;em&gt;Classification And REgression Training&lt;/em&gt;) no &lt;a href=&#34;https://cran.r-project.org&#34;&gt;CRAN&lt;/a&gt;. Esse pacote se propõe a fazer tudo dentro da modelagem preditiva, desde o pré processamento, treinamento, validação, validação cruzada e etc etc etc. &lt;a href=&#34;https://player.fm/series/series-2098032/tidymodels-with-max-kuhn&#34;&gt;O próprio Max já admitiu que dar manutenção neste pacote é um pesadelo&lt;/a&gt;. A preocupação com a retrocompatibilidade e a quantidade de algoritmos presentes no &lt;code&gt;{caret}&lt;/code&gt; tem impedido atualizações massivas no pacote. Desde que entrou para a equipe do Rstudio, no final de 2016, o objetivo de ambos (Max e RStudio) tem sido o de desenvolver uma interface integrada para modelos preditivos no R, condizente com a &lt;a href=&#34;https://cran.r-project.org/web/packages/tidyverse/vignettes/manifesto.html&#34;&gt;filosofia e o manifesto que norteiam o &lt;code&gt;tidyverse&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ao invés de “refazer” o &lt;code&gt;{caret}&lt;/code&gt;, a estratégia adotada foi o de construir uma nova &lt;em&gt;suit&lt;/em&gt; de pacotes integrados voltados para modelagem preditiva, da mesma forma que o &lt;code&gt;tidyverse&lt;/code&gt; é voltado para a &lt;strong&gt;Ciência de Dados&lt;/strong&gt; num &lt;a href=&#34;https://r4ds.had.co.nz/introduction.html&#34;&gt;sentido mais amplo&lt;/a&gt;, conforme mostrado pelo &lt;strong&gt;Diagrama de Hadley&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;diagram.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Essa &lt;em&gt;suit&lt;/em&gt; de pacotes integrados para modelagem preditiva se chama &lt;code&gt;tidymodels&lt;/code&gt;. Dentro do &lt;code&gt;tidymodels&lt;/code&gt; existem já &lt;a href=&#34;https://www.tidyverse.org/articles/2018/08/tidymodels-0-0-1/&#34;&gt;vários pacotes&lt;/a&gt;, entre eles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;rsamples&lt;/code&gt;: voltado para criar e resumir diferentes tipos de amostragens.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;recipes&lt;/code&gt;: uma &lt;em&gt;engine&lt;/em&gt; de pré-processamento para gerar uma &lt;em&gt;design matrices&lt;/em&gt; para modelagem ou visualização.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;parsnip&lt;/code&gt;: uma interface unificada para treinamento de modelos na filosofia &lt;em&gt;tidy&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yardstick&lt;/code&gt;: métodos para mensurar a performance de modelos;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;corrr&lt;/code&gt;: um pacote para explorar correlações.&lt;/li&gt;
&lt;li&gt;entre diversos outros ainda em desenvolvimento. Dê uma olhada &lt;a href=&#34;https://github.com/tidymodels&#34;&gt;aqui&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;criando-uma-receita&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Criando uma receita&lt;/h2&gt;
&lt;p&gt;O &lt;code&gt;{recipes}&lt;/code&gt; têm como objetivo principal entregar uma &lt;a href=&#34;https://en.wikipedia.org/wiki/Design_matrix&#34;&gt;matriz de design (&lt;em&gt;design matrix&lt;/em&gt;)&lt;/a&gt; pronta para ser utilizada no ajuste de modelos preditivos. Direto da &lt;em&gt;Wikipedia&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Na Estatística, uma &lt;strong&gt;matriz de design&lt;/strong&gt;, também conhecida como &lt;strong&gt;matriz de modelo&lt;/strong&gt; ou &lt;strong&gt;matriz regressora&lt;/strong&gt; e também chamada de &lt;strong&gt;X&lt;/strong&gt;, é uma matriz de valores de variáveis explanatórias de um conjunto de objetos.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;O R possui métodos já estabelecidos para gerar esses tipo de matrizes (como as &lt;a href=&#34;https://www.rstudio.com/rviews/2017/02/01/the-r-formula-method-the-good-parts&#34;&gt;fórmulas&lt;/a&gt; e a função &lt;code&gt;model.matrix()&lt;/code&gt;), mas existem &lt;a href=&#34;https://rviews.rstudio.com/2017/03/01/the-r-formula-method-the-bad-parts/&#34;&gt;algumas limitações sobre o que eles podem fazer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A ideia do &lt;code&gt;recipes&lt;/code&gt;, portanto é definir uma &lt;strong&gt;receita&lt;/strong&gt; de pré-processamento que possa ser usada sequencialmente para definir a codificação e o pré-processamento dos dados.&lt;/p&gt;
&lt;div id=&#34;criando-uma-receita-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Criando uma receita&lt;/h3&gt;
&lt;p&gt;A receita é criada a partir da função &lt;code&gt;recipe()&lt;/code&gt;. Um exemplo abaixo usando o dataset &lt;code&gt;Sonar&lt;/code&gt; do pacote &lt;code&gt;mlbench&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(recipes, mlbench) 

data(Sonar)

Sonar %&amp;gt;% 
  recipe(formula = Class ~ .)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         60&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ao ativar a função, é necessário indicar quais as variáveis de entrada e saída do modelo.
Existem algumas formas de fazer isso. Uma delas é o método da fórmula, usado acima.&lt;/p&gt;
&lt;p&gt;Esse modelo assume o formato &lt;span class=&#34;math inline&#34;&gt;\(Y \sim X_1 + X_2 + ... + X_n\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Acima, o &lt;code&gt;.&lt;/code&gt; indica que todas as demais variáveis devem estar do lado direito da fórmula (é mais fácil que escrever as 60 variáveis uma a uma).&lt;/p&gt;
&lt;p&gt;Existem &lt;a href=&#34;https://tidymodels.github.io/recipes/articles/Selecting_Variables.html&#34;&gt;outras formas de selecionar variáveis dentro do pacote &lt;code&gt;{recipes}&lt;/code&gt;&lt;/a&gt;, como a função &lt;code&gt;update_role()&lt;/code&gt;. Essa função é útil especialmente quando sua tabela não contém apenas variáveis de preditoras e de saídas (&lt;code&gt;predictors&lt;/code&gt; e &lt;code&gt;outcome&lt;/code&gt;). Abaixo um exemplo usando esta função:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(biomass)

biomass %&amp;gt;% 
  recipe() %&amp;gt;% 
  update_role(HHV, 
              new_role = &amp;quot;outcome&amp;quot;) %&amp;gt;% 
  update_role(carbon, hydrogen, oxygen, nitrogen, sulfur,
           new_role = &amp;quot;predictor&amp;quot;) %&amp;gt;% 
  update_role(sample, 
              new_role = &amp;quot;id variable&amp;quot;) %&amp;gt;% 
  update_role(dataset, 
              new_role = &amp;quot;splitting indicator&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##                 role #variables
##          id variable          1
##              outcome          1
##            predictor          5
##  splitting indicator          1&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;acessando-variaveis-por-seu-papel&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Acessando variáveis por seu papel&lt;/h3&gt;
&lt;p&gt;Estes “papéis” (roles), atribuídos nessa etapa, vão ser usados nas fases subsequentes. É possível indicar os seguintes papéis através de atalhos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;has_role()&lt;/code&gt;: acessa todas as variáveis com papéis determinados&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all_outcome()&lt;/code&gt;: acessa a variável determinada como Y do modelo&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all_predictors()&lt;/code&gt;: acessa todas as variáveis determinadas como preditoras&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all_numeric()&lt;/code&gt;: acessa todas as variáveis numéricas&lt;/li&gt;
&lt;li&gt;&lt;code&gt;all_nominal&lt;/code&gt;: acessa todas as variáveis categóricas.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;steps&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Steps&lt;/h3&gt;
&lt;p&gt;A partir da criação da receita e a determinação dos papéis, é hora do pré-processamento real. Cada &lt;strong&gt;passo&lt;/strong&gt; do pré-processamento é adicionado através de, pasme, &lt;strong&gt;passos&lt;/strong&gt; (em inglês, &lt;em&gt;steps&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Os passos disponíveis, a grosso modo, podem ser divididos nos seguintes grupos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Imputação&lt;/li&gt;
&lt;li&gt;Transformações individuais para assimetria e outras questões&lt;/li&gt;
&lt;li&gt;Discretização (caso necessário e caso você não tenha outra opção)&lt;/li&gt;
&lt;li&gt;Criação de variáveis &lt;em&gt;dummy&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Criação de interações&lt;/li&gt;
&lt;li&gt;Passos de normalização (centralizar, escalar, etc)&lt;/li&gt;
&lt;li&gt;Transformações multivariadas (PCA, &lt;em&gt;spatial-sign&lt;/em&gt;, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Abaixo, usando o primeiro exemplo, vamos criar centralizar e escalar nossa receita:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data(Sonar)

Sonar %&amp;gt;% 
  recipe(formula = Class ~ .) %&amp;gt;% 
  step_center(all_predictors()) %&amp;gt;% 
  step_scale(all_predictors())&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Data Recipe
## 
## Inputs:
## 
##       role #variables
##    outcome          1
##  predictor         60
## 
## Operations:
## 
## Centering for all_predictors
## Scaling for all_predictors&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Na atual versão (0.1.7), existem 74 passos possíveis, com mais sendo desenvolvidos e implementados a todo momento. Vale lembrar que o pacote recipes ainda se encontra em fase de “maturação”, ou seja, muita coisa bacana ainda vem por aí. Abaixo a lista dos passos disponíveis hoje.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ls(&amp;quot;package:recipes&amp;quot;, pattern = &amp;quot;^step_&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;step_arrange&amp;quot;       &amp;quot;step_bagimpute&amp;quot;     &amp;quot;step_bin2factor&amp;quot;   
##  [4] &amp;quot;step_BoxCox&amp;quot;        &amp;quot;step_bs&amp;quot;            &amp;quot;step_center&amp;quot;       
##  [7] &amp;quot;step_classdist&amp;quot;     &amp;quot;step_corr&amp;quot;          &amp;quot;step_count&amp;quot;        
## [10] &amp;quot;step_date&amp;quot;          &amp;quot;step_depth&amp;quot;         &amp;quot;step_discretize&amp;quot;   
## [13] &amp;quot;step_downsample&amp;quot;    &amp;quot;step_dummy&amp;quot;         &amp;quot;step_factor2string&amp;quot;
## [16] &amp;quot;step_filter&amp;quot;        &amp;quot;step_geodist&amp;quot;       &amp;quot;step_holiday&amp;quot;      
## [19] &amp;quot;step_hyperbolic&amp;quot;    &amp;quot;step_ica&amp;quot;           &amp;quot;step_integer&amp;quot;      
## [22] &amp;quot;step_interact&amp;quot;      &amp;quot;step_intercept&amp;quot;     &amp;quot;step_inverse&amp;quot;      
## [25] &amp;quot;step_invlogit&amp;quot;      &amp;quot;step_isomap&amp;quot;        &amp;quot;step_knnimpute&amp;quot;    
## [28] &amp;quot;step_kpca&amp;quot;          &amp;quot;step_kpca_poly&amp;quot;     &amp;quot;step_kpca_rbf&amp;quot;     
## [31] &amp;quot;step_lag&amp;quot;           &amp;quot;step_lincomb&amp;quot;       &amp;quot;step_log&amp;quot;          
## [34] &amp;quot;step_logit&amp;quot;         &amp;quot;step_lowerimpute&amp;quot;   &amp;quot;step_meanimpute&amp;quot;   
## [37] &amp;quot;step_medianimpute&amp;quot;  &amp;quot;step_modeimpute&amp;quot;    &amp;quot;step_mutate&amp;quot;       
## [40] &amp;quot;step_mutate_at&amp;quot;     &amp;quot;step_naomit&amp;quot;        &amp;quot;step_nnmf&amp;quot;         
## [43] &amp;quot;step_normalize&amp;quot;     &amp;quot;step_novel&amp;quot;         &amp;quot;step_ns&amp;quot;           
## [46] &amp;quot;step_num2factor&amp;quot;    &amp;quot;step_nzv&amp;quot;           &amp;quot;step_ordinalscore&amp;quot; 
## [49] &amp;quot;step_other&amp;quot;         &amp;quot;step_pca&amp;quot;           &amp;quot;step_pls&amp;quot;          
## [52] &amp;quot;step_poly&amp;quot;          &amp;quot;step_profile&amp;quot;       &amp;quot;step_range&amp;quot;        
## [55] &amp;quot;step_ratio&amp;quot;         &amp;quot;step_regex&amp;quot;         &amp;quot;step_relu&amp;quot;         
## [58] &amp;quot;step_rename&amp;quot;        &amp;quot;step_rename_at&amp;quot;     &amp;quot;step_rm&amp;quot;           
## [61] &amp;quot;step_rollimpute&amp;quot;    &amp;quot;step_sample&amp;quot;        &amp;quot;step_scale&amp;quot;        
## [64] &amp;quot;step_shuffle&amp;quot;       &amp;quot;step_slice&amp;quot;         &amp;quot;step_spatialsign&amp;quot;  
## [67] &amp;quot;step_sqrt&amp;quot;          &amp;quot;step_string2factor&amp;quot; &amp;quot;step_unknown&amp;quot;      
## [70] &amp;quot;step_unorder&amp;quot;       &amp;quot;step_upsample&amp;quot;      &amp;quot;step_window&amp;quot;       
## [73] &amp;quot;step_YeoJohnson&amp;quot;    &amp;quot;step_zv&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;finalizando-a-receita-e-cozinhando-novos-dados&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Finalizando a receita e “cozinhando” novos dados&lt;/h3&gt;
&lt;p&gt;Todos os passos, até agora, simplesmente foram enumerados, nenhum deles é efetivamente calculado até que você entre com a função &lt;code&gt;prep()&lt;/code&gt;, que literalmente prepara sua receita.&lt;/p&gt;
&lt;p&gt;Após, é possível gerar os dados pré-processados a partir de duas funções:
- função &lt;code&gt;juice()&lt;/code&gt;: essa função “espreme” os dados usados para a criação da receita
- função &lt;code&gt;bake()&lt;/code&gt;: aplica a mesma série de passos em uma nova base de dados.&lt;/p&gt;
&lt;p&gt;Abaixo vamos separar a base de dados &lt;code&gt;credit_data&lt;/code&gt; em uma base de treino e uma de teste para ver o funcionamento completo do pacote.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(rsample)

data(&amp;quot;credit_data&amp;quot;)

set.seed(55)
train_test_split &amp;lt;- initial_split(credit_data, prop = 0.75)

credit_train &amp;lt;- training(train_test_split)
credit_test &amp;lt;- testing(train_test_split)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Criadas as bases de treino e teste, vamos criar uma receita simples. Perceba o uso do parâmetro &lt;code&gt;retain = TRUE&lt;/code&gt;. Com isso, forçamos que a receita guarde a base de treino original, só assim podemos usar a função &lt;code&gt;juice()&lt;/code&gt;. Em bases muito grandes, precisamos ter cuidado com o tamanho da receita, caso esse parâmetro seja acionado.&lt;/p&gt;
&lt;p&gt;Vamos usar &lt;code&gt;step_knnimpute()&lt;/code&gt; para preencher os &lt;code&gt;NAs&lt;/code&gt; com seus vizinhos mais próximos e &lt;code&gt;step_dummy()&lt;/code&gt; para transformar nossas variáveis categóricas em variáveis dummy.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rec &amp;lt;- credit_train %&amp;gt;%
  recipe(Status ~ .) %&amp;gt;%
  step_knnimpute(all_predictors()) %&amp;gt;% 
  step_dummy(all_predictors(), -all_numeric()) %&amp;gt;% 
  step_center(all_predictors()) %&amp;gt;% 
  step_scale(all_predictors()) %&amp;gt;%
  prep(retain = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora temos uma receita pronta para ser aplicada. A receita guarda o modelo k-nearest-neighbour criado, as médias e desvios padrões, assim como qualquer outro dado necessário para pré-processar sua base.&lt;/p&gt;
&lt;p&gt;Primeiro vamos retirar a base de treino pré-processada, para isso, basta usar a função &lt;code&gt;juice()&lt;/code&gt; na receita. A seguir, vamos pré-processar a base de treino usando a função &lt;code&gt;bake()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_data &amp;lt;- rec %&amp;gt;% juice()
test_data &amp;lt;- rec %&amp;gt;% bake(credit_test)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Temos agora uma base pré-processada e pronta para uso, seja em modelagem, seja para visualização.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;train_data&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3,341 x 23
##    Seniority   Time      Age Expenses Income Assets    Debt  Amount   Price
##        &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;   &amp;lt;dbl&amp;gt;
##  1     0.133  0.921 -0.635      0.885 -0.171 -0.449 -0.273  -0.488  -0.996 
##  2     1.12   0.921  1.92      -0.386 -0.146 -0.449 -0.273  -0.0646  0.343 
##  3    -0.979  0.921 -1.18       0.377  0.492 -0.240 -0.273  -0.276  -0.206 
##  4    -0.979 -0.706 -1.00      -0.488 -0.446 -0.449 -0.273  -1.53   -0.890 
##  5    -0.856  0.921 -0.0873     0.987  0.893 -0.157 -0.273  -0.806   0.322 
##  6    -0.979  0.921 -0.453      1.75  -0.446  0.804 -0.273   0.359   0.836 
##  7    -0.979  0.108  0.369      1.75  -0.784 -0.449 -0.273   0.359   0.0299
##  8    -0.238  0.108 -0.270      0.224 -0.221 -0.115 -0.273   0.253   0.210 
##  9    -0.114 -0.706 -0.727      0.224 -0.271 -0.199 -0.273  -0.806  -0.882 
## 10     1.37  -0.706  0.00402    0.987  0.342 -0.157 -0.0520 -0.912  -0.841 
## # ... with 3,331 more rows, and 14 more variables: Status &amp;lt;fct&amp;gt;,
## #   Home_other &amp;lt;dbl&amp;gt;, Home_owner &amp;lt;dbl&amp;gt;, Home_parents &amp;lt;dbl&amp;gt;,
## #   Home_priv &amp;lt;dbl&amp;gt;, Home_rent &amp;lt;dbl&amp;gt;, Marital_married &amp;lt;dbl&amp;gt;,
## #   Marital_separated &amp;lt;dbl&amp;gt;, Marital_single &amp;lt;dbl&amp;gt;, Marital_widow &amp;lt;dbl&amp;gt;,
## #   Records_yes &amp;lt;dbl&amp;gt;, Job_freelance &amp;lt;dbl&amp;gt;, Job_others &amp;lt;dbl&amp;gt;,
## #   Job_partime &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Basicamente é isso aí. Nos próximos posts, vou tentar mostrar um pouco mais dos demais pacotes do &lt;code&gt;tidymodels&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Achou algum erro? &lt;a href=&#34;http://twitter.com/edgar_cutar&#34;&gt;Me avise no twitter&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Personagens Convidados e Representatividade nos Simpsons</title>
      <link>/post/simpsons/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/simpsons/</guid>
      <description>


&lt;p&gt;A &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;Tidy Tuesday&lt;/a&gt; dessa semana nos trás um dataset com os personagens secundários de todos os episódios dos Simpsons!
Quero aproveitar a oportunidade de usar usar o &lt;a href=&#34;https://ryo-n7.github.io/2019-05-16-introducing-tvthemes-package/&#34;&gt;maravilhoso pacote &lt;code&gt;tvthemes&lt;/code&gt;&lt;/a&gt; de &lt;a href=&#34;https://github.com/Ryo-N7/tvthemes&#34;&gt;Ryo Nakagawara&lt;/a&gt; só pra fazer um par de gráficos divertidos.&lt;/p&gt;
&lt;p&gt;Vamos baixar os dados. Detalhe que dessa vez é necessário usar a função &lt;code&gt;read_delim()&lt;/code&gt;, pois nosso csv está com “|” como separador das colunas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(tidyverse, extrafont, jpeg, ggpubr, recipes, scales) 
pacman::p_load_gh(&amp;quot;Ryo-N7/tvthemes&amp;quot;)

#Carregar Fonte dos Simpsons (uma similar não paga, no caso)
import_simpsons() # Talvez seja necessário isntalar o arquivo .ttf. 
                  # Se for o caso você verá um aviso
#font_import()     # necessário apenas uma vez
loadfonts(device = &amp;quot;win&amp;quot;)

#Ler arquivo
simpsons &amp;lt;- readr::read_delim(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-27/simpsons-guests.csv&amp;quot;, 
                              delim = &amp;quot;|&amp;quot;, 
                              quote = &amp;quot;&amp;quot;) %&amp;gt;% 
  separate(number, into = c(&amp;quot;episode_ordinal&amp;quot;, &amp;quot;season_episode&amp;quot;), sep = &amp;quot;–&amp;quot;) %&amp;gt;% 
  mutate_at(vars(season, episode_ordinal, season_episode), as.numeric)

# Olhadela
simpsons %&amp;gt;% glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 1,386
## Variables: 7
## $ season          &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, ...
## $ episode_ordinal &amp;lt;dbl&amp;gt; 2, 3, 3, 6, 6, 7, 8, 9, 10, 11, 12, 13, 13, 13, 14,...
## $ season_episode  &amp;lt;dbl&amp;gt; 102, 103, 103, 106, 106, 107, 108, 109, 110, 111, 1...
## $ production_code &amp;lt;chr&amp;gt; &amp;quot;7G02&amp;quot;, &amp;quot;7G03&amp;quot;, &amp;quot;7G03&amp;quot;, &amp;quot;7G06&amp;quot;, &amp;quot;7G06&amp;quot;, &amp;quot;7G09&amp;quot;, &amp;quot;7G...
## $ episode_title   &amp;lt;chr&amp;gt; &amp;quot;Bart the Genius&amp;quot;, &amp;quot;Homer&amp;#39;s Odyssey&amp;quot;, &amp;quot;Homer&amp;#39;s Odys...
## $ guest_star      &amp;lt;chr&amp;gt; &amp;quot;Marcia Wallace&amp;quot;, &amp;quot;Sam McMurray&amp;quot;, &amp;quot;Marcia Wallace&amp;quot;,...
## $ role            &amp;lt;chr&amp;gt; &amp;quot;Edna Krabappel;  Ms. Melon&amp;quot;, &amp;quot;Worker&amp;quot;, &amp;quot;Edna Kraba...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;No primeiro gráfico gostaria de usar a função &lt;code&gt;step_other()&lt;/code&gt; do pacote &lt;code&gt;recipes&lt;/code&gt; para unir todos os &lt;code&gt;roles&lt;/code&gt; com menos de 1% de frequência na base. O pacote &lt;a href=&#34;https://tidymodels.github.io/recipes/&#34;&gt;&lt;code&gt;recipes&lt;/code&gt;&lt;/a&gt; é idealizado para pré-processamento de dados pelo &lt;a href=&#34;https://twitter.com/topepos&#34;&gt;Max Kuhn&lt;/a&gt;(Software Engineer do RStudio e mago da modelagem preditiva). Vale a pena dar uma olhada nas funções disponíveis nesse pacote.&lt;/p&gt;
&lt;p&gt;Também é usada a função &lt;code&gt;background_image()&lt;/code&gt; do pacote &lt;code&gt;ggpubr&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;springfield &amp;lt;- readJPEG(&amp;quot;img/spring.jpg&amp;quot;)

most_frequent &amp;lt;- simpsons %&amp;gt;% 
  recipe() %&amp;gt;% #começa aqui a receita
  step_other(role, threshold = 0.01) %&amp;gt;% # unir &amp;quot;outros&amp;quot;
  prep() %&amp;gt;% #preparar a receita
  juice() %&amp;gt;% #&amp;quot;espremer&amp;quot;
  mutate(role = fct_collapse(role,
           `Celebrities as Themselves` = c(&amp;quot;Himself&amp;quot;, &amp;quot;Herself&amp;quot;, &amp;quot;Themselves&amp;quot;)),
         role = fct_infreq(role, ordered = TRUE),) 

most_frequent %&amp;gt;% 
  ggplot(aes(x = episode_ordinal, fill = role)) +
  background_image(springfield) +
  geom_histogram(position = &amp;quot;fill&amp;quot;, alpha = 0.8, binwidth = 15) +
  scale_fill_simpsons(reverse = TRUE) +
  scale_y_continuous(labels = scales::percent(0:4*0.25)) +
  labs(title = &amp;quot;Co-estrelas mais comuns nos Simpsons&amp;quot;,
       caption = &amp;quot;Fonte: #TidyTuesday - Elaborado por Edgar Cutar Junior&amp;quot;,
       x = &amp;quot;Numero do Episodio&amp;quot;,
       y = &amp;quot;% de aparicoes&amp;quot;) +
  theme_simpsons(title.font = &amp;quot;Akbar&amp;quot;,
                 text.font = &amp;quot;Akbar&amp;quot;,
                 axis.text.size = 8)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-27-simpsons/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Bacana, né?&lt;/p&gt;
&lt;p&gt;Seguindo uma baita ideia de layout do &lt;a href=&#34;https://twitter.com/_Gil_Henriques&#34;&gt;Gil Henriques&lt;/a&gt; e uma dica que vi na internet e não lembro quem deu, gostaria de fazer outro gráfico: entre os convidados que interpretaram a si mesmos, qual o percentual de participação de homens e mulheres?&lt;/p&gt;
&lt;p&gt;Dessa vez vou usar o pacote &lt;code&gt;ggimage&lt;/code&gt; pra colocar uma imagem ocupando todo o fundo do gráfico.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(ggimage, patternplot)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## package &amp;#39;gridGraphics&amp;#39; successfully unpacked and MD5 sums checked
## package &amp;#39;ggplotify&amp;#39; successfully unpacked and MD5 sums checked
## package &amp;#39;rvcheck&amp;#39; successfully unpacked and MD5 sums checked
## package &amp;#39;ggimage&amp;#39; successfully unpacked and MD5 sums checked
## 
## The downloaded binary packages are in
##  C:\Users\edgarj\AppData\Local\Temp\RtmpQ9McIb\downloaded_packages
## package &amp;#39;RcppParallel&amp;#39; successfully unpacked and MD5 sums checked
## package &amp;#39;patternplot&amp;#39; successfully unpacked and MD5 sums checked
## 
## The downloaded binary packages are in
##  C:\Users\edgarj\AppData\Local\Temp\RtmpQ9McIb\downloaded_packages&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;man_vs_women &amp;lt;- simpsons %&amp;gt;% 
  filter(role %in% c(&amp;quot;Himself&amp;quot;, &amp;quot;Herself&amp;quot;)) %&amp;gt;% 
  group_by(season = round(season/2)*2, role) %&amp;gt;% 
  summarise(number = n())

plot &amp;lt;- man_vs_women %&amp;gt;% 
  ggplot(aes(x = season, y = number, fill = role)) +
  geom_col(position = &amp;quot;fill&amp;quot;, color = &amp;quot;white&amp;quot;, 
           width = 1.4, size = 1) +
  scale_fill_manual(name = NULL,
                    values = c(&amp;quot;white&amp;quot;, NA),
                    labels = c(&amp;quot;Mulheres&amp;quot;, &amp;quot;Homens&amp;quot;),
                    ) +
  ggtitle(&amp;quot;Celebridades nos Simpsons&amp;quot;) +
  scale_x_continuous(name = &amp;quot;Temporada&amp;quot;,
                     breaks = 0:6 * 5) +
  scale_y_continuous(name = &amp;quot;Percentual de participacao&amp;quot;,
                     labels = scales::percent(0:4 * 0.25)) +
  theme(text = element_text(family = &amp;quot;Akbar&amp;quot;),
        axis.text = element_text(size = 15, color = &amp;quot;white&amp;quot;),
        legend.title = element_text(size = 15, color = &amp;quot;white&amp;quot;),
        legend.text = element_text(size = 12, color = &amp;quot;white&amp;quot;),
        axis.title = element_text(size = 20, color = &amp;quot;white&amp;quot;),
        plot.title = element_text(size = 25, face = &amp;quot;bold&amp;quot;, 
                                  color = &amp;quot;white&amp;quot;, hjust = 0.5),
        plot.caption = element_text(color = &amp;quot;white&amp;quot;),
        plot.margin = margin(t = 1, r = 3, b = 1, l = 1, &amp;quot;cm&amp;quot;),
        axis.title.y = element_text(angle = 90),
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank()) 
  
plot_back &amp;lt;- ggbackground(plot, &amp;quot;img/quadro_simpsons.gif&amp;quot;, by = &amp;quot;height&amp;quot;)
plot_back&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-27-simpsons/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Parece que a dica estava certa. Por algum motivo as mulheres são inacreditavelmente subrepresentadas como convidadas nos Simpsons, e não tem nenhum indicativo que esta situação esteja melhorando ao longo dos anos. Porra, Fox!&lt;/p&gt;
&lt;p&gt;Gostou? Tem alguma dúvida? Me chama no &lt;a href=&#34;https://twitter.com/edgar_cutar&#34;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mapeando Explosões Nucleares</title>
      <link>/post/nuclear/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/nuclear/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leaflet/leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet/leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/leafletfix/leafletfix.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4-compressed.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/Proj4Leaflet/proj4leaflet.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/rstudio_leaflet/rstudio_leaflet.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/leaflet-binding/leaflet.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Nessa semana a &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;Tidy Tuesday&lt;/a&gt; trouxe uma base de dados de explosões nucleares e uma boa oportunidade de brincar com mapas! Como de praxe, vamos baixar e ver como estão os dados.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Aviso aos cartógrafos e profissionais de GIS:&lt;/strong&gt; pretendo cometer várias simplificações grosseiras ao falar de projeções ao longo desse post.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(tidyverse, maps, mapproj, ggthemes) 

nuclear &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-20/nuclear_explosions.csv&amp;quot;)

nuclear %&amp;gt;% glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 2,051
## Variables: 16
## $ date_long         &amp;lt;dbl&amp;gt; 19450716, 19450805, 19450809, 19460630, 19460724,...
## $ year              &amp;lt;dbl&amp;gt; 1945, 1945, 1945, 1946, 1946, 1948, 1948, 1948, 1...
## $ id_no             &amp;lt;dbl&amp;gt; 45001, 45002, 45003, 46001, 46002, 48001, 48002, ...
## $ country           &amp;lt;chr&amp;gt; &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, &amp;quot;USA&amp;quot;, ...
## $ region            &amp;lt;chr&amp;gt; &amp;quot;ALAMOGORDO&amp;quot;, &amp;quot;HIROSHIMA&amp;quot;, &amp;quot;NAGASAKI&amp;quot;, &amp;quot;BIKINI&amp;quot;, ...
## $ source            &amp;lt;chr&amp;gt; &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, &amp;quot;DOE&amp;quot;, ...
## $ latitude          &amp;lt;dbl&amp;gt; 32.54, 34.23, 32.45, 11.35, 11.35, 11.30, 11.30, ...
## $ longitude         &amp;lt;dbl&amp;gt; -105.57, 132.27, 129.52, 165.20, 165.20, 162.15, ...
## $ magnitude_body    &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...
## $ magnitude_surface &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0...
## $ depth             &amp;lt;dbl&amp;gt; -0.100, -0.600, -0.600, -0.200, 0.030, -0.080, -0...
## $ yield_lower       &amp;lt;dbl&amp;gt; 21.0, 15.0, 21.0, 21.0, 21.0, 37.0, 49.0, 18.0, 2...
## $ yield_upper       &amp;lt;dbl&amp;gt; 21.0, 15.0, 21.0, 21.0, 21.0, 37.0, 49.0, 18.0, 2...
## $ purpose           &amp;lt;chr&amp;gt; &amp;quot;WR&amp;quot;, &amp;quot;COMBAT&amp;quot;, &amp;quot;COMBAT&amp;quot;, &amp;quot;WE&amp;quot;, &amp;quot;WE&amp;quot;, &amp;quot;WR&amp;quot;, &amp;quot;WR&amp;quot;,...
## $ name              &amp;lt;chr&amp;gt; &amp;quot;TRINITY&amp;quot;, &amp;quot;LITTLEBOY&amp;quot;, &amp;quot;FATMAN&amp;quot;, &amp;quot;ABLE&amp;quot;, &amp;quot;BAKER&amp;quot;...
## $ type              &amp;lt;chr&amp;gt; &amp;quot;TOWER&amp;quot;, &amp;quot;AIRDROP&amp;quot;, &amp;quot;AIRDROP&amp;quot;, &amp;quot;AIRDROP&amp;quot;, &amp;quot;UW&amp;quot;, &amp;quot;...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos começar pegando um mapa-mundi. Para nossa conveniência existe um nos pacotes &lt;code&gt;ggplot&lt;/code&gt; e &lt;code&gt;maps&lt;/code&gt;. Plotamos esse mapa usando a função &lt;code&gt;geom_polygon()&lt;/code&gt; e vamos usar o tema &lt;code&gt;theme_map&lt;/code&gt; do pacote &lt;code&gt;ggthemes&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world &amp;lt;- ggplot2::map_data(&amp;quot;world&amp;quot;)

world %&amp;gt;% 
  ggplot() +
  geom_polygon(aes(x = long, y = lat, group = group)) +
  coord_quickmap() +
  ggthemes::theme_map()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Agora vamos colocar as explosões nucleares e usar as variáveis &lt;code&gt;size&lt;/code&gt; e &lt;code&gt;color&lt;/code&gt; pra nos trazer mais informações. A função &lt;code&gt;coord_quickmap()&lt;/code&gt;, como o nome indica, é boa pra visualizações rápidas. Não é exatamente equivalente a nenhuma das projeções comumente vistas em cartografia.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world %&amp;gt;% 
  ggplot() +
  geom_polygon(aes(x = long, y = lat, group = group), 
               fill = &amp;quot;gray95&amp;quot;, color = &amp;quot;black&amp;quot;) +
  geom_point(data = nuclear,
             aes(x = longitude,
                 y = latitude,
                 size = yield_lower,
                 color = country),
             alpha = 0.45) +
  labs(size = &amp;quot;Quilotons&amp;quot;,
       color = &amp;quot;País&amp;quot;) +
  ylim(-90, 90) +
  scale_color_brewer(type = &amp;quot;qual&amp;quot;, palette = 1) +
  coord_quickmap() +
  ggthemes::theme_map() +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Parece que a URSS foi campeã em testes nucleares em território próprio. Vamos dar um zoom no território da (hoje) Rússia usando &lt;code&gt;xlim&lt;/code&gt; e &lt;code&gt;ylim&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world %&amp;gt;% 
  ggplot() +
  geom_polygon(aes(x = long, y = lat, group = group), 
               fill = &amp;quot;gray95&amp;quot;, color = &amp;quot;black&amp;quot;) +
  geom_point(data = nuclear,
             aes(x = longitude,
                 y = latitude,
                 size = yield_lower,
                 color = country),
             alpha = 0.45) +
  labs(size = &amp;quot;Quilotons&amp;quot;,
       color = &amp;quot;País&amp;quot;) +
  scale_color_brewer(type = &amp;quot;qual&amp;quot;, palette = 1) +
  xlim(range(world %&amp;gt;% 
               filter(region == &amp;quot;Russia&amp;quot;) %&amp;gt;% 
               pull(long))) +
  ylim(range(world %&amp;gt;% 
               filter(region == &amp;quot;Russia&amp;quot;) %&amp;gt;% 
               pull(lat))) +
  coord_quickmap() +
  ggthemes::theme_map() +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Parece que o alvo preferido da URSS eram as ilhas de Yuzhni e Severny, no Ártico. Não a toa o Ártico foi o maior palco da Guerra Fria.&lt;/p&gt;
&lt;p&gt;Curiosidade: Sabiam que os EUA tentaram comprar a Groenlândia da Dinamarca logo depois da II Guerra Mundial, em 1946, já prevendo a importância de fortalecer sua posição no ártico?&lt;/p&gt;
&lt;p&gt;Isso serve como deixa pra usar a projeção “Azimutal Equidistante” no próximo gráfico, usando a função &lt;code&gt;coord_map()&lt;/code&gt; do &lt;code&gt;ggplot2&lt;/code&gt;, que usa as projeções da terra definidas no pacote &lt;code&gt;mapproj&lt;/code&gt;. Filtrei só o hemisfério norte pra esse caso. Essa projeção mantém as distâncias em relação ao pólo, mas distorce as áreas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world %&amp;gt;% 
  ggplot() +
  geom_polygon(aes(x = long, y = lat, group = group), 
               fill = &amp;quot;gray95&amp;quot;, color = &amp;quot;black&amp;quot;) +
  geom_point(data = nuclear,
             aes(x = longitude,
                 y = latitude,
                 size = yield_lower,
                 color = country),
             alpha = 0.45) +
  geom_hline(yintercept = 0) +
  labs(size = &amp;quot;Quilotons&amp;quot;,
       color = &amp;quot;País&amp;quot;) +
  scale_color_brewer(type = &amp;quot;qual&amp;quot;, palette = 1) +
  ylim(0, 90) +
  coord_map(projection = &amp;quot;azequidistant&amp;quot;) +
  ggthemes::theme_map() +
  theme(legend.position = &amp;quot;bottom&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Dá pra entender melhor como esses testes da URSS foram todos “no quintal” dos EUA, né?&lt;/p&gt;
&lt;p&gt;Agora vou deixar o mapa com uma cara um pouco mais profissional, baixando dados de melhor qualidade do pacote &lt;code&gt;rworldmap&lt;/code&gt;, usando as funções do pacote &lt;code&gt;sf&lt;/code&gt;, deixando o mapa com melhor qualidade. Pra mudar pra mais uma projeção, vamos usar a de Mercator dessa vez. Essa é a projeção das mais comuns, que mantém os meridianos como linhas verticais e, consequentemente, distorce todas as áreas proporcionalmente à latitude. Vou transformar nossos pontos em uma simple feature para poder converter ela na projeção de Mercator.&lt;/p&gt;
&lt;p&gt;Daqui pra frente estou bebendo direto da fonte do &lt;a href=&#34;https://twitter.com/ClausWilke&#34;&gt;Claus Wilke&lt;/a&gt;, seu livro &lt;a href=&#34;https://www.amazon.com.br/Fundamentals-Data-Visualization-Claus-Wilke/dp/1492031089/ref=sr_1_1?__mk_pt_BR=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;amp;crid=2NRATHIY3AJUV&amp;amp;keywords=fundamentals+of+data+visualization&amp;amp;qid=1566562344&amp;amp;s=gateway&amp;amp;sprefix=fundamentals+of+da%2Caps%2C288&amp;amp;sr=8-1&#34;&gt;&lt;em&gt;Fundamentals of Data Visualization&lt;/em&gt;&lt;/a&gt;, que acabei de comprar e é espetacular, e &lt;a href=&#34;https://gist.github.com/clauswilke/783e1a8ee3233775c9c3b8bfe531e28a&#34;&gt;esse gist&lt;/a&gt; em que ele ensina a criar mapas com diferentes projeções. Ah, o livro está inteiramente &lt;a href=&#34;https://serialmentor.com/dataviz/&#34;&gt;disponível online&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(rgeos, rworldmap, sf) 

world_sf &amp;lt;- sf::st_as_sf(rworldmap::getMap(resolution = &amp;quot;low&amp;quot;))

crs_longlat &amp;lt;- &amp;quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&amp;quot;

crs_mercator &amp;lt;- &amp;quot;+proj=merc&amp;quot;

nuclear_sf &amp;lt;- nuclear %&amp;gt;% 
  drop_na(yield_lower, latitude, longitude) %&amp;gt;% 
  st_as_sf(coords = c(&amp;quot;longitude&amp;quot;, &amp;quot;latitude&amp;quot;), 
           crs = &amp;quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&amp;quot;) 

nuclear_mercator &amp;lt;- nuclear_sf %&amp;gt;%
  st_transform(crs = crs_mercator)

# calculate bounding box in transformed coordinates
mercator_bbox &amp;lt;- 
  rbind(c(-180, -85), c(180, 85)) %&amp;gt;%
  st_multipoint() %&amp;gt;%
  st_sfc(
    crs = &amp;quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&amp;quot;
  ) %&amp;gt;% 
  st_transform(crs = crs_mercator)

ggplot(world_sf) + 
  geom_sf(fill = &amp;quot;gray95&amp;quot;, color = &amp;quot;black&amp;quot;, size = 0.5/.pt) + 
  geom_sf(data = nuclear_mercator,
          aes(size = yield_lower,
              color = country),
          show.legend = &amp;#39;point&amp;#39;,
          alpha = 0.45) +
  labs(size = &amp;quot;Quilotons&amp;quot;,
       color = &amp;quot;País&amp;quot;) +
  scale_x_continuous(name = NULL, breaks = seq(-120, 120, by = 60)) +
  scale_y_continuous(name = NULL, breaks = seq(-60, 60, by = 30)) +
  coord_sf(
    xlim = mercator_bbox[[1]][, 1],
    ylim = mercator_bbox[[1]][, 2],
    expand = FALSE,
    crs = crs_mercator
  ) + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = &amp;quot;#56B4E950&amp;quot;, 
                                    color = &amp;quot;white&amp;quot;, size = 1),
    panel.grid.major = element_line(color = &amp;quot;gray30&amp;quot;, 
                                    size = 0.25),
    legend.key.width = unit(0.05,&amp;quot;cm&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Vale pela novidade, mas não gostei muito do resultado final.&lt;/p&gt;
&lt;p&gt;Pra terminar, gostaria de testar a Projeção Descontínua de Goode, que mantém tanto áreas quanto formas das massas terrestres.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;crs_goode &amp;lt;- &amp;quot;+proj=igh&amp;quot; # Define Projeção

# Linhas externas em latlong
lats &amp;lt;- c(
  90:-90, # lado direito
  -90:0, 0:-90, # terceiro corte
  -90:0, 0:-90, # segundo corte
  -90:0, 0:-90, # primeiro corte
  -90:90, # esquerda acima
  90:0, 0:90, # cortar o topo
  90 # fechar
)

longs &amp;lt;- c(
  rep(180, 181), # lado direito embaixo
  rep(c(80.01, 79.99), each = 91), # terceiro corte
  rep(c(-19.99, -20.01), each = 91), # segundo corte
  rep(c(-99.99, -100.01), each = 91), # primeiro corte
  rep(-180, 181), # esquerda acima
  rep(c(-40.01, -39.99), each = 91), # cortar o topo
  180 # fechar
)

goode_outline &amp;lt;- 
  list(cbind(longs, lats)) %&amp;gt;%
  st_polygon() %&amp;gt;%
  st_sfc(
    crs = &amp;quot;+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs&amp;quot;
  ) %&amp;gt;% 
  st_transform(crs = crs_goode)

# Explosões em coordenadas transformadas
nuclear_goode &amp;lt;- nuclear_sf %&amp;gt;% 
  st_transform(crs = crs_goode)

# Caixa de Limite em coordenadas transformadas
xlim &amp;lt;- c(-21945470, 21963330)
ylim &amp;lt;- c(-9538022, 9266738)

goode_bbox &amp;lt;- 
  list(
    cbind(
      c(xlim[1], xlim[2], xlim[2], xlim[1], xlim[1]), 
      c(ylim[1], ylim[1], ylim[2], ylim[2], ylim[1])
    )
  ) %&amp;gt;%
  st_polygon() %&amp;gt;%
  st_sfc(crs = crs_goode)

# area fora das linhas de borda
goode_without &amp;lt;- st_difference(goode_bbox, goode_outline)

ggplot(world_sf) + 
  geom_sf(fill = &amp;quot;gray95&amp;quot;, color = &amp;quot;black&amp;quot;, size = 0.5/.pt) +
  geom_sf(data = goode_without, fill = &amp;quot;white&amp;quot;, color = NA) +
  geom_sf(data = goode_outline, fill = NA, color = &amp;quot;grey30&amp;quot;, size = 0.5/.pt) +
  geom_sf(data = nuclear_goode,
          aes(size = yield_lower,
              color = country),
          show.legend = &amp;#39;point&amp;#39;,
          alpha = 0.45) +
  labs(size = &amp;quot;Quilotons&amp;quot;,
       color = &amp;quot;País&amp;quot;,
       title = &amp;quot;Explosões Nucleares de 1945 a 1998&amp;quot;) +
  scale_x_continuous(name = NULL, breaks = seq(-120, 120, by = 60)) +
  scale_y_continuous(name = NULL, breaks = seq(-60, 60, by = 30)) +
  coord_sf(xlim = 0.95*xlim, ylim = 0.95*ylim, expand = FALSE, crs = crs_goode, ndiscr = 1000) + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = &amp;quot;#56B4E950&amp;quot;, color = &amp;quot;white&amp;quot;, size = 1),
    panel.grid.major = element_line(color = &amp;quot;gray30&amp;quot;, size = 0.25)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-21-nuclear/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;E aí? O que acharam?&lt;/p&gt;
&lt;p&gt;Vamos conversar lá no &lt;a href=&#34;https://twitter.com/edgar_cutar&#34;&gt;twitter&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;BÔNUS: Mapa interativo&lt;/p&gt;
&lt;p&gt;Como um bônus, sem grandes elocubrações, vou mostrar como fazer um mapa interativo usando o pacote &lt;code&gt;leaflet&lt;/code&gt;. Fica aí só como exemplo.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(leaflet)

pal &amp;lt;- colorFactor(
  palette = &amp;quot;Dark2&amp;quot;,
  domain = world_sf$country)

world_sf %&amp;gt;% 
  leaflet() %&amp;gt;% 
  addTiles() %&amp;gt;% 
  addCircles(data = nuclear_sf, 
             color = ~pal(country), 
             radius = ~yield_lower*10) %&amp;gt;% 
  addLegend(data = nuclear_sf, 
            &amp;quot;bottomright&amp;quot;, 
            pal = pal, 
            values = ~country,
            title = &amp;quot;País&amp;quot;,
            opacity = 1)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;leaflet html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;options&#34;:{&#34;crs&#34;:{&#34;crsClass&#34;:&#34;L.CRS.EPSG3857&#34;,&#34;code&#34;:null,&#34;proj4def&#34;:null,&#34;projectedBounds&#34;:null,&#34;options&#34;:{}}},&#34;calls&#34;:[{&#34;method&#34;:&#34;addTiles&#34;,&#34;args&#34;:[&#34;//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png&#34;,null,null,{&#34;minZoom&#34;:0,&#34;maxZoom&#34;:18,&#34;tileSize&#34;:256,&#34;subdomains&#34;:&#34;abc&#34;,&#34;errorTileUrl&#34;:&#34;&#34;,&#34;tms&#34;:false,&#34;noWrap&#34;:false,&#34;zoomOffset&#34;:0,&#34;zoomReverse&#34;:false,&#34;opacity&#34;:1,&#34;zIndex&#34;:1,&#34;detectRetina&#34;:false,&#34;attribution&#34;:&#34;&amp;copy; &lt;a href=\&#34;http://openstreetmap.org\&#34;&gt;OpenStreetMap&lt;\/a&gt; contributors, &lt;a href=\&#34;http://creativecommons.org/licenses/by-sa/2.0/\&#34;&gt;CC-BY-SA&lt;\/a&gt;&#34;}]},{&#34;method&#34;:&#34;addCircles&#34;,&#34;args&#34;:[[32.54,34.23,32.45,11.35,11.35,11.3,11.3,11.3,48,37,37,37,37,37,11.3,11.3,11.3,11.3,48,48,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-20.4,11.3,11.3,37,37,37,37,37,37,37,37,37,37,37,50,50,50,50,50,-28.7,-28.7,11.35,11.35,11.35,11.35,11.35,11.3,52,50,50,50,50,50,50,50,50,50,37,37,37,37,37,37,37,37,37,37,37,37,37,29,37,50,50,50,73,37,37,37,50,50,37,46,50,50,11.3,-20.23,11.35,11.35,11.3,11.3,11.3,11.35,11.3,11.3,11.3,-20.4,11.3,11.35,11.3,11.3,11.35,11.35,11.3,50,50,50,50,-30,-30,-30,-30,50,50,48,50,50,50,50,50,50,37,-4,37,-4,37,37,37,-4,37,37,37,37,37,37,37,37,37,37,37,50,37,50,37,37,37,37,37,37,73,37,50,-30,37,37,37,37,73,-30,50,37,73,37,-30,73,2,37,37,50,50,50,37,73,73,73,50,73,50,37,50,50,50,73,50,12.617,2,11.3,11.35,11.3,11.3,11.3,11.3,11.35,11.3,11.3,11.3,11.35,11.3,11.3,11.35,11.35,11.3,11.3,11.35,11.3,11.3,11.35,11.3,11.35,11.3,11.35,11.3,11.3,11.35,11.3,11.3,16.45,11.3,16.45,11.3,2,-38.5,-49.5,2,-48.5,2,37,37,37,37,2,37,37,37,37,73,73,73,73,73,73,37,37,73,37,73,37,73,37,37,73,37,37,37,37,73,37,73,73,73,37,73,73,37,37,37,37,73,37,37,73,73,37,37,37,37,37,37,37,37,37,37,37,48,48,26.19,26,26,26,50,50,50,48.45,50,50,74.2,73,50,50,74.2,73,50,50,74.6,37,74,37,50,74,50,50,50,50,73,50,73,50,50,37,73,50,73.7,74.3,48,73,37,50,50,50,50,73.8,73.9,70.7,73,50,70.7,48,48,37,50,73.8,73.6,75.1,50,73,73,50,50,50,73,73.7,73,50,24,37,32.25,37,37,37,37,36.7,37,49.7,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,2,2,37,23.8,2,2,37.046,2,2,37,2,31.233,2,37.065,2,37.122,2,37.125,2,2,37,37,2,2,2,2,37,2,2,2,37,2,2,37,37,2,37,37.177,37,16.45,2,2,37,37.055,36.8,37,37.13,50,50,50,74.2,50,73,50,50,74.3,50,74,73,50,50,37.13,37.046,50,73,74.7,50,50,73,37,73.7,37,74.4,74.2,73.2,73.8,37,73,50,50,50,73.7,74.3,50,37,16.45,37,16.45,73,50,73,50,37,37,50,50,16.45,37,37,50,16.45,48,73.4,16.45,73,37,16.45,50,48,50,73,50,73,16.45,50,50,73,48,16.45,73,73,50,50,16.45,50,37,50,50,50,37,50,50,50,37,50,37,37.1,74.3,37,37,73,73,73,73,73,73,73,50,50,50,74.2,73.6,73.4,73,37,37,37,37,37,37,37,37,37,24,37,24,37,37,37,37,37,37,37,37,37,37.1,37,37,37,37.2,37,37,37,37,37.1,37,37,37,37.2,37.1,37,37,37,37,37,37,24.1,39.2,37,37.1,37.1,36.9,37.1,37,37.1,37.1,37,37,37,24.054,37,37,37.2,37,37.1,49.7,37.1,37,37,37.1,37,37,37.1,37,49.9,50,37.2,37,24.067,37,37.1,37.2,37.2,37,49.9,37,37,50,37.2,37.1,37,37.1,37,37,72.9,37,50,37,37,41.5,37,31,37,73.5,37,37.2,49.7,24.042,37.1,37.1,37,37,37,37,37.07,49.88,37,50,37.07,37,36.99,36.72,37,24.16,49.81,37.01,37,37.11,50,53,36.95,37.26,36.97,37,36.96,37.14,49.79,37.2,41.5,37.07,37,37.07,24,53,37,37,36.83,49.83,37,37,37,37.06,50.4,37.02,37,37.08,36.98,36.98,49.78,37.06,24,49.92,50,51.61,37.03,49.86,37,24.04,37.13,37.08,37.02,49.9,37.17,37.1,37,37.03,37,37.07,49.77,24,37.17,37.15,36.94,37.08,36.9,49.72,37.05,37.05,37.08,36.95,37.2,49.86,47.9,37,36.82,37,37.17,36.98,37.32,49.74,41.5,37.08,37.09,37.11,37.16,37.2,37.03,36.98,37,37,37.1,49.92,37.32,-22,-22,50,-22,37,49.83,37.3,37,50.5,49.9,-22,36.84,37.13,-22,37.12,38.8,-22,37,49.77,41.5,73.4,73,50,37.17,37.1,37,50,37,50,31,36.82,37,49.92,37.32,41.5,37,37.14,37.08,37,50,37.11,36.91,37.16,49.79,37.11,37,37,49.78,37,37,36.92,49.76,36.98,37.1,37.04,37.16,37.27,37.21,37,49.81,-22,40.8,37,37.15,-22,49.87,37,-22,37,49.88,37.07,49.82,37.01,37.18,36.96,37,37.12,50,37.07,37,50.01,37,50.02,37.1,57.69,49.8,37.09,73.4,36.99,37,37,49.81,37.02,49.93,37,49.88,36.67,37.01,41.5,49.74,37.23,37.18,38.65,37,37.24,36.89,37.1,37,37.12,37,37.03,37,37.3,36.83,37,37.12,37.1,37.44,49.84,37.31,37,37,37.1,0,0,37,37,37.2,49.8,37.26,49.96,37,37,37.18,47.85,-22,49.77,-22,37,37.07,-22,37,37,50,-22.207,36.85,37.28,49.75,37.21,-21.83,36.88,37.05,37.17,49.82,37.02,37,36.99,50,37,50,36.87,37,37.05,37,73.39,49.76,37,37.02,37,36.95,37.13,37.28,37.02,37.01,37,49.7,37.2,41.5,37.14,37.19,37,37.04,37,37,37,37.15,49.84,37,37,36.96,37.11,50,50,37,37.05,37.05,37.25,37,49.78,37.01,37,50.01,36.95,37,49.76,37.07,37.13,49.88,37.2,36.91,37,57.35,51.31,39.5,49.77,36.84,37.33,37,41.35,45.88,40.72,49.81,37,51.59,37.23,73.39,37,37.07,37.04,37.22,50,37,36.98,37,50,49.94,37.13,43.79,37,37,37.06,36.9,37.09,49.98,49.7,37.11,49.84,36.98,37.09,37,37.09,37.13,50,37.07,37.11,37.14,37.08,36.93,37.08,37.3,49.77,37.03,37.08,37,37.05,37,37.17,37,37.16,-22,37.04,36.99,-22,37.2,37.11,50,37,37,-22.2,-22,52.2,37.08,49.83,50,-21.8,49.95,49.82,-22,-22,-22,49.77,50,37,73.31,40.92,37.03,37,50,36.98,37,37,43.87,37.01,37.23,37,49.73,37.12,37.12,43.81,50,49.7,50,61.3,50,49.8,49.8,-22,50,-22,37,50,37,37,37.1,37,50,37,64,-22,37.1,37,64.2,37,37,37,37,-22,-21.9,37.1,57.8,37.07,73.4,37,37,61.6,37.1,50,37.32,50,51.6,51.5,41.5,37,49.8,37.16,37.1,37,37,50,47.9,49.8,50,37,41.5,36.98,50,37,49.8,41.5,37,49.7,36.97,37.4,37.122,37,50,37.2,37.25,37.12,37.004,49.8,37,-22,37.12,37,37,-22,49.7,0,37.215,37.02,-22,71,-22,37,49.8,49.5,50,73.3,50,67.7,52.1,37.082,37.122,46.8,49.9,37.25,37,37,52.8,51.8,49.8,50.1,37,37,37.14,37,51.7,37,49.8,37.103,37,37,50,37.005,37.123,37,37,39.793,37.18,37,37.185,37.245,37.1,40.6,37.148,37,49.8,-22,50,-22,42.7,-22,-22,50.5,-22,73.3,-22,45.6,50,70.8,51.6,37,37,37.2,49.8,53.7,70.8,50,36.9,37.06,37,50,37,37,50,37,49.9,37.104,50,37,37,50,37,37,37,49.743,26.9,37.06,37.1,49.952,36.96,-22,39.5,37.2,49.889,-22,-22,53.8,49.789,37.068,-22,37.09,-22,-22,50,37.023,68.913,-22,-22,73.366,67.233,37.15,49.82,-22,36.99,37.133,37,0,49.972,37,37,70.817,37,37,50,49.908,49.755,49.824,37.11,49.96,37,37,37,49.76,50,37.11,37.13,49.76,37.18,37.11,48.1,49.94,37.11,37.22,37.33,37.09,-15.45,49.75,37,37,37.35,37.27,49.98,50,49.83,0,73.34,37.02,69.6,55.8,70.84,73,73.32,37.22,41.43,37.28,49.92,36.99,37.22,-22,37.12,49.81,37.12,50.02,37.3,49.8,41.5,37.07,37.11,37.271,37.24,37,37.31,37.31,37.26,37.11,50,48,-22,50,49.84,49.89,37.19,49.84,37,49.98,49.85,-22.1,-22,49.8,37.07,47.81,49.9,37.13,49.95,41.5,73.41,37,41.64,73.4,49.98,-22,61.52,37,40.78,49.97,37.13,-22,49.87,50,37.08,37.12,37,37.1,49.8,37,-22.14,37,-21.89,49.79,50,-22,37.12,49.85,37.09,37.1,49.86,37,-22,49.96,-22.4,-22,69.54,37,49.73,37.09,50.95,37,37,49.82,37.11,37,64.13,73.37,50.05,57.29,37,41.5,37.1,47.85,73.47,48,37.1,49.78,50.06,48,37.19,37.07,-22,50,37.02,-21.86,50,49.93,37.13,37,-22,49.85,50,37.1,37.12,-22,41.5,37.01,49.94,-22,37.1,37,-22,49.71,37.3,37.23,49.72,37,37,50,49.89,37.034,50,49.88,-22,49.84,37.1,37.08,-22,-22,49.73,63.65,73.31,65.87,49.82,49.98,37.27,48,37.21,49.91,49.89,66.53,73.38,37.08,37.07,37,61.53,41.42,49.72,47.81,63.21,49.76,37.29,-22,50.03,-22,37.13,49.86,49.93,-21.85,48,37.01,49.92,41.5,37.27,-22,47.78,-21.9,49.9,48,47.87,37.1,50.08,37.1,37.2,49.97,-22,-22,37.02,50,-21.88,-22,50,49.8,36.96,49.84,37.29,50,-22.06,37.11,49.89,37.14,-21.81,50.05,47.81,49.9,50,-21.86,-21.81,37.08,49.86,37.01,61.86,49.93,37.12,37.09,64.06,37.15,0,73.37,37.23,49.76,60.66,61.85,49.81,73.34,47.79,49.96,-22,-22,37,49.81,49.88,37.1,49.82,49.93,-22,37.1,-22,37.2,50,-21.86,-21.77,37.1,50,-22.1,49.822,37.1,49.96,37.2,37.1,49.75,37,49.95,37.3,-21.83,0,-22,37,0,0,49.91,-21.75,-22,-21.86,37.3,49.81,37,49.94,49.81,37.1,37.1,46.79,73.36,49.94,41.04,50,37.1,37.2,60.79,37.1,-22,-21.87,50,50,61.73,49.87,37.3,49.98,50.01,37.1,37,37.2,-22,-22,50,-21.67,49.98,-21.8,49.87,37.2,68.21,49.94,37.102,50,37.3,49.72,-22.18,37.1,-22,37.1,49.79,-22,-21.89,37.2,49.75,37.2,60.59,37.1,49.89,37,46.82,46.79,73.32,37.1,50,49.88,63.79,-22,-21.917,37.076,37.108,49.736,49.86,37.1,-21.4,-21.91,37.1,49.84,49.9,37.1,37.2,37.3,49.83,-22,-22,-21.86,-22,-22,37,49.87,37.3,37.1,37.1,37.114,37.236,49.795,-22,-21.766,49.995,-22,-21.864,37.102,53.813,37.084,37.19,49.747,49.92,37.02,69.206,49.854,37.212,37.212,37.175,64.313,37.091,41.632,61.553,73.392,46.73,46.748,46.754,46.743,37.024,-22,49.928,37.03,49.871,50.066,37.051,37.163,50,37.301,49,49.815,37.073,-21.847,37.112,-22,37.012,-21.895,37.103,37,49.74,37.158,49.906,-22,49.81,-21.745,51.308,51.34,51.344,-22,37.119,-21.835,36.998,73.383,37.192,37.273,49.878,37.21,37,37.106,46.816,46.817,46.86,46.78,46.796,46.837,73.348,37,49.932,41.566,49.921,50,50.066,49.764,50,-22,-22,37.021,37.14,49.838,37,37,49.888,37,50.022,49.934,37,49.766,49.934,37,37,0,-21.852,37,49.98,37,0,-21.933,37,37,49.891,51.356,51.374,51.353,37,37,65.025,61.889,74.1,67.774,61,61,0,37,49.873,0,55.835,0,41.633,50,73.365,49.95,47.044,46.843,0,0,0,49,-22,50,0,36,37,48,41.5,0,49,49.869,37.058,37.18,37.095,37.201,49.907,0,37.253,0,0,0,37.248,37.008,50,0,37.124,50,50,65.965,50,50,50,37.297,37,37.002,37.09,37.209,37,37.11,-22,-22,37,-22,-22,37.053,37.238,37.083,37.157,37,37.264,-22.15,-22,37.125,-22,-21.913,37.098,37.265,37.279,37.143,37,37.069,37.3,37.22,-22,-21.894,37.1,-22,-21.877,37.263,37.225,37.011,50,50,37,50,50,49.851,37.248,60.781,60.674,36.983,37.233,-22,49.75,-22,41.6,49.865,-22,37.194,49.901,37.22,-21.984,37,62.11,37.104,49.797,62.7,49.828,73.289,61.426,37.061,49,37.228,47.633,49,37.142,-22,-22.34,49.872,-21.878,-22,36.996,37.235,49.955,49.753,49.831,49.799,49.905,37.314,49.884,37.013,49.822,49.928,73.364,-21.867,37.124,37.032,-21.903,37.26,50.045,-21,37.166,37,-21.906,37.252,37.297,66.316,37.001,37.086,61.331,49.833,41.75,37.089,49.866,-22,-21.883,37,50.078,49.818,-21.991,-22.244,73.387,37,37.199,49.886,50,49.924,37.077,49.925,49.868,37.128,37.143,-21.881,37.108,-21,37.086,-21.832,-22.252,37.283,37.275,49.873,50.039,37.376,49.746,49.92,-21.902,37.263,-21.766,37.107,-21.917,-22,-22.258,37.231,37,37.113,37,41.654,-21.819,-21,37.262,36.993,-22.192,-21.866,37.207,41.586,37,37,37.248,73.364,-22.147,37.227,-21.906,37.104,37.296,37.245,-21,-21.832,-22.267,-21.865,-21,-21.833,37.087,37.226,37.236,37.063,37.096,37.272,37,41.604,37.005,37.124,37.207,37.021,41.763,41.667,41.527,41.662,41.603,41.559,-21.852,-22.25,-21.891,-21.879,-21.881,-22.236,41.65,41.69,27.07,27.07,28.9,28.49],[-105.57,132.27,129.52,165.2,165.2,162.15,162.15,162.15,76,-116,-116,-116,-116,-116,162.15,162.15,162.15,162.15,76,76,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,115.57,162.15,162.15,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,78,78,78,78,78,132.35,132.35,165.2,165.2,165.2,165.2,165.2,162.15,55,78,78,78,78,78,78,78,78,78,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-126,-116,78,78,78,55,-116,-116,-116,78,78,-116,61,78,78,162.15,115.55,165.2,165.2,162.15,162.15,162.15,165.2,162.15,162.15,162.15,115.53,162.15,165.2,162.15,162.15,165.2,165.2,162.15,78,78,78,78,131,131,131,131,78,78,46,78,78,78,78,78,78,-115,-155,-116,-155,-116,-116,-116,-155,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,78,-116,78,-116,-116,-116,-116,-116,-116,55,-116,78,131,-116,-116,-116,-116,55,131,78,-116,55,-116,131,55,-157,-116,-116,78,78,78,-116,55,55,55,78,55,78,-116,78,78,78,55,78,163.017,-157,162.15,165.2,162.15,162.15,162.15,162.15,165.2,162.15,162.15,162.15,165.2,162.15,162.15,165.2,165.2,162.15,162.15,165.2,162.15,162.15,165.2,162.15,165.2,162.15,165.2,162.15,162.15,165.2,162.15,162.15,-169.32,162.15,-169.32,162.15,-157,-11.5,-8.2,-157,-9.7,-157,-116,-116,-116,-116,-157,-116,-116,-116,-116,55,55,55,55,55,55,-116,-116,55,-116,55,-116,55,-116,-116,55,-116,-116,-116,-116,55,-116,55,55,55,-116,55,55,-116,-116,-116,-116,55,-116,-116,55,55,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,46,46,-0.04,-0.09,-0.1,-0.1,78,78,78,44.3,78,78,52.5,55,78,78,52.1,55,78,78,51.1,-116,51.9,-116,78,52,78,78,78,78,55,78,55,78,78,-116,55,78,53.8,51.6,46,55,-116,77.7,78,78,78,53.2,53.8,53.5,55,78,53.5,46,46,-116,78,53.5,56.2,56.7,78,55,55,78,78,78,55,55.7,55,78,5,-116,-104.14,-116,-116,-116,-116.2,-116.1,-116,78.1,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-157,-157,-116,5.4,-157,-157,-116.025,-157,-157,-116,-157,-124.217,-157,-116.03,-157,-116.047,-157,-116.052,-157,-157,-116,-116,-157,-157,-157,-157,-116,-157,-157,-157,-116,-157,-157,-116,-116,-157,-116,-116.045,-116,-169.32,-157,-157,-116,-116.033,-115.925,-116,-116.064,78,78,78,52.5,78,55,78,78,51.5,78,53.3,55,78,78,-116.009,-116.024,78,55,50.3,78,78,55,-116,53.8,-116,51.5,51.6,54.7,53.8,-116,55,78,78,78,55,52.4,78,-116,-169.32,-116,-169.32,55,78,55,78,-116,-116,78,78,-169.32,-116,-116,78,-169.32,46,54.9,-169.32,55,-116,-169.32,78,46,78,55,78,55,-169.32,78,78,55,46,-169.32,55,55,78,78,-169.32,78,-116,78,78,78,-116,78,78,78,-116,78,-116,-116,52.4,-116,-116,55,55,55,55,55,55,55,78,78,78,52.3,57.5,56.5,55,-116,-116,-116,-116,-116,-116,-116,-116,-116,5,-116,5,-116,-116,-116,-116,-116,-116,-115,-116,-116,-116,-115,-116,-115,-116.2,-116,-116,-115,-116,-116.1,-116,-116,-116,-116.1,-116,-116,-116,-116,-116,-116,-116,5.1,-118.38,-116,-116,-116,-116.3,-115.9,-116,-116,-116,-116,-116,-116,5.053,-116,-116,-116,-116,-116,78,-116,-116,-116,-116.1,-116,-116,-116,-116.1,78.3,78,-116.1,-116,5.034,-116,-116.1,-116.1,-116.1,-116,78.1,-116,-116,78,-116.1,-116,-116,-116,-116,-116,55.2,-116,78,-116,-116,89,-116,-89,-116,53.7,-116,-116.1,78,5.041,-116.1,-116.1,-116,-116.1,-116,-116.3,-116.01,78.96,-116,78,-116.03,-116,-116,-115.94,-116,5.03,78.13,-116.08,-116,-116.09,78,56,-116.08,-116.54,-116.23,-116,-115.94,-116.1,78.12,-116.5,89,-116.05,-116,-116.04,5,56,-116.05,-116,-116.06,78.17,-116,-116,-116,-116.03,77.9,-116.11,-116,-116.04,-115.99,-115.99,78.15,-116.02,5,78.17,78,179.22,-116.01,78.04,-116,5.03,-116.02,-116.03,-116.05,78.1,-116.02,-116.05,-116,-115.97,-116,-116.1,78.1,5,-116.42,-116.11,-116.13,-116.09,-116.15,78.07,-116.16,-115.88,-116.13,-116.01,-116.45,78.2,47.7,-116,-115.96,-116,-115.96,-116.04,-116.32,77.95,89,-116.14,-116,-116.03,-116.14,-116,-116.01,-116.03,-116.1,-116,-116.1,78.06,-116.28,-139,-139,78,-139,-115.89,78.05,-116,-116,77.86,77.92,-139,-115.92,-116.02,-139,-115.98,64.5,-139,-116,78.03,89,54.57,55,78,-115.96,-116,-116.07,78,-116,78,-89,-115.96,-116,77.76,-116.36,89,-116,-116.18,-116.01,-116,78,-116.1,-115.91,-116.07,78.14,-116.11,-116,-116,78.06,-116,-116,-116.42,78.23,-116.08,-116.1,-116.02,-116.06,-116.35,-116.5,-116,78.11,-139,89.4,-115.95,-116.23,-139,78.1,-116.06,-139,-116,78.16,-116.04,78.05,-116.15,-116.05,-116.04,-116,-116.12,78,-116.07,-116,77.8,-116.12,77.72,-116,65.27,78.03,-116.03,54.42,-116.03,-116,-116,78.02,-116.06,77.4,-116,78.21,-107.17,-116.07,89,78.32,-116.19,-114.12,-116.2,-116,-116.45,-116.12,-116.02,-116,-116.2,-116,-116.38,-116,-116.27,-115.93,-116,-116.08,-116.07,-116.19,78.07,-116.41,-115.99,-116,-116.06,0,0,-116,-116,-116.07,78.13,-116.27,79.05,-116,-116,-116.48,47.72,-139,78.09,-139,-116,-116.07,-139,-116,-116,78.02,-138.809,-115.9,-116.29,78.15,-116.08,-139.05,-115.91,-116.13,-116.27,78.18,-115.94,-116,-116.26,78,-116,78,-116.27,-116,-116.08,-116,54.58,78.06,78,-115.99,-116.31,-116.18,-116.04,-116.37,-116.07,-116.11,-116,78.1,-116.5,89,-116.07,-116.22,-116,-115.99,-116,-116,-116,-116.14,78.15,-116,-116,-116.02,-116.08,78,78,-116,-116.03,-116.03,-116.46,-116,78.16,-116.03,-116,77.81,-116.07,-116,78.2,-116.08,-116.07,78.23,-116.1,-116.01,-116,54.77,55.03,-107.88,78.03,-115.93,-116.43,-116,88.33,42.49,89.3,78.18,-116,179.19,-116.43,54.5,-116,-116.04,-116.16,-116.09,78,-116,-116.02,-116,78,78.98,-116.24,54.75,-116,-116,-116,-116.07,-116.07,77.79,78.2,-115.96,78.27,-116.07,-116.01,-116,-116.05,-116.21,78,-115.98,-116.08,-116.08,-116.05,-116.02,-116.03,-116.49,78.11,-116.04,-116.1,-116.03,-116.02,-116,-116.19,-116.2,-116.03,-139,-116.03,-116.05,-139,-116.2,-116.03,78,-116,-116,-138.8,-139,55.7,-116.08,78.22,78,-139.2,77.77,78.18,-139,-139,-139,78.1,78,-116,54.89,89.4,-116,-116,77.82,-116.04,-116,-116,54.78,-115.94,-116.05,-116,78.17,-116.05,-116.09,54.82,78,78.2,78,56.5,78,78.1,78.2,-139,77.8,-139,-116,77.7,-116,-116,-116.1,-116,79.1,-116,55,-139,-116.1,-116,55.2,-116,-116,-116,-116,-139,-139,-116,41.1,-115.97,55.1,-116,-116,47.1,-116,77.7,-116.14,77.6,54.5,179.1,89,-116,78.1,-116.15,-116.1,-116,-116,77.9,48.2,78.1,78,-116,89,-115.81,78.9,-116,78.2,89,-116,78.2,-116.05,62,-116.083,-116,78,-116.2,-116.11,-116.088,-116.002,78.2,-116,-139,-116.04,-116,-116,-139,78,0,-116.183,-116.03,-139,54,-139,-116,78.1,48.2,77,55.1,77.7,33.4,52,-116.037,-116.085,45,78.8,-116.32,-116,-116,51.1,64.2,78.1,78.8,-116,-116,-116.083,-116,77.2,-116,78.2,-116.027,-116,-116,77.7,-116.028,-116.059,-116,-116,-108.366,-116.09,-116,-116.215,-116.346,-116,89.5,-116.086,-116,78.1,-139,78.9,-139,67.4,-139,-139,68.4,-140,55.2,-139,67.8,78,53.9,54.6,-116,-116,-116.203,78.2,55.4,54.2,78,-116,-116.57,-116,79,-116,-116,78,-116,78,-116.053,78,-116,-116,78,-116,-116,-116,78.15,71.7,-116.11,-116.1,78.844,-116.02,-139,89.4,-116.2,78.115,-139,-139,55.2,78.139,-116.032,-139,-116.05,-139,-139,78,-116.036,75.899,-139,-139,55.094,62.119,-116.083,78.091,-139,-115.89,-116.068,-116,0,78.96,-116,-116,54.063,-116,-116,78,77.648,78.064,78.117,-116.32,79.046,-116,-116,-116,78.09,78,-116.06,-116.08,78.23,-116.21,-116.08,47.2,79.02,-116.03,-116.47,-116.52,-116.03,-140.5,78.08,-116,-116,-116.32,-116.37,78.92,78,78.23,0,54.5,-116.03,90.46,75.1,53.53,55,54.93,-116.18,88.4,-116.41,78.91,-116.04,-116.37,-139,-116.02,78.24,-116.06,78.86,-116.33,78.25,89,-116.03,-116.04,-116.488,-116.42,-116,-116.36,-116.47,-116.31,-116.05,78,47,-139,78,78.18,78.83,-116.25,77.97,-116,79.07,78.97,-138.7,-139,78.08,-116.04,48.1,77.7,-116.08,78.98,89,54.5,-116,88.21,54.47,78.2,-138,112.73,-116,89.66,79.01,-116.08,-139,78.89,78,-116,-116.07,-116,-116.04,78.15,-116,-138.72,-116,-138.96,78.15,78,-139,-116.062,78.16,-116.03,-116.06,78.84,-116,-139,78.91,-139,-139,90.51,-116,78.09,-116.01,110.78,-116,-116,78.14,-116.05,-116,99.62,54.41,78.93,106.23,-116,89,-116.1,48.13,54,47,-116.3,78.16,78.87,47,-116.21,-116.05,-139,78,-116.02,-138.94,78,78.89,-116.09,-116,-139,78.14,78,-116,-116.06,-139,89,-116.1,77.79,-138.7,-116.05,-116,-139,78.06,-116.33,-116.37,78.18,-116,-116,78,78.2,-116.037,78,78.81,-139,78.91,-116.01,-116.04,-139,-139,78.15,125.34,54.7,112.56,78.1,79.02,-116.36,47,-116.21,78.94,78.4,86.26,54.44,-116.05,-116.02,-116,112.87,88.66,78.21,48.09,63.26,78.12,-116.3,-139,78.98,-139,-116.08,78.05,78.77,-139,47,-116.04,78.2,89,-116.41,-139,48.14,-138.9,78.22,47,48.06,-116.01,78.88,-116.1,-116.1,77.74,-139,-139,-116.02,78,-139.04,-139,78,78.12,-116.01,78.19,-116.46,78,-138.64,-116.02,78.92,-116.08,-138.98,79.06,48.07,77.83,78,-139,-138.89,-116.07,78.94,-116.01,122.22,78.98,-116.07,-116.05,99.62,-116.04,0,54.58,-116.36,78.05,71.44,113.12,78.13,54.73,48.11,79.07,-139,-139,-116,78.21,78.84,-116.1,78.27,78.8,-139,-116.1,-139,-116.1,78,-138.97,-138.88,-116.1,77.86,-138.7,78.08,-116,78.81,-116.4,-116,78.11,-116,79.05,-116.5,-139,0,-139,-116,0,0,78.86,-139,-116,-139,-116.5,78.14,-116,78.86,78.08,-116,-116.1,48.29,54.82,79.1,89.94,78,-116,-116.2,97.57,-116,-139,-138.96,78,78,66.76,78.97,-116.3,78.01,79.03,-116,-116,-116.1,-139,-139,78,-138.84,79.02,-138.9,78.9,-116,53.5,79.01,-116.004,78,-116.3,78.09,-138.73,-116,-139,-116,78.17,-139,-138.88,-116,78.07,-116.1,55.7,-116,78.98,-116,48.28,48.27,54.55,-116,78,78.89,97.54,-139,-138.996,-116.068,-116.049,78.183,78.857,-116.1,-139.4,-138.88,-116.1,78.21,78.86,-116.1,-116.5,-116.3,78.12,-139,-139,-139.03,-139,-139,-116,78.92,-116.4,-116.1,-116,-116.017,-116.37,78.158,-139,-139.05,78.856,-139,-138.943,-116.075,104.132,-116.007,-116.048,77.971,78.812,-116.016,81.647,78.216,-116.207,-116.207,-116.088,91.834,-116.045,88.301,112.864,54.559,48.197,48.215,48.27,48.213,-116.032,-139,78.869,-116.072,78.095,79.043,-116.045,-116.063,78,-116.46,79,78.222,-116.04,-138.906,-116.022,-139,-116.089,-138.918,-116.006,-116,78.206,-116.089,78.981,-139,78.107,-138.917,53.273,53.27,53.291,-139,-116.084,-138.922,-116.003,54.913,-115.992,-116.355,78.183,-116.209,-116,-116.049,48.291,48.279,48.272,48.3,48.297,48.231,54.495,-116,78.843,88.766,78.907,78,79.036,78.169,78,-139,-139,-115.975,-116.072,78.218,-116,-116,78.788,-116,78.978,79.013,-116,78.185,78.915,-116,-116,0,-138.961,-116,79.06,-116,0,-138.992,-116,-116,78.963,53.249,53.257,53.271,-116,-116,55.187,72.149,53.8,33.688,58,58,0,-116,78.208,0,87.408,0,88.781,80,54.979,78.842,47.919,48.023,0,0,0,78,-139,81,0,-112,-116,77,89,0,80,78.818,-116.045,-116.089,-116.032,-116.207,78.932,0,-116.325,0,0,0,-116.489,-116.084,79,0,-116.122,79,78,40.754,78,79,79,-116.438,-116,-116.043,-116.002,-116.152,-116,-116.121,-139,-139,-116,-139,-139,-116.045,-116.473,-116.066,-116.204,-116,-116.44,-139.12,-139,-116.061,-139,-139.1,-116.016,-116.499,-116.356,-116.071,-116,-116.05,-116.307,-116.462,-139,-139.068,-116.048,-139,-138.986,-116.412,-116.08,-116.045,78,79,-116,79,78,78.69,-116.509,56.22,56.295,-116.005,-116.423,-139,77.99,-139,88.9,78.143,-139,-116.035,78.726,-116.178,-138.844,-116,112.77,-116.023,78.235,112.7,78.898,54.713,112.708,-116.045,78,-116.375,56.218,78,-116.079,-139,-138.97,78.795,-139.037,-139,-116.004,-116.163,78.852,78.024,78.744,78.064,78.905,-116.471,78.965,-116.044,78.119,78.769,54.445,-139.072,-116.072,-115.987,-139.009,-116.441,79.005,-139,-116.072,-116,-139.016,-116.377,-116.307,78.548,-116.005,-116.069,47.955,78.808,88.474,-116.049,78.081,-139,-139.046,-116,78.988,78.071,-138.907,-138.836,54.998,-116,-116.209,78.926,78,78.831,-116.001,78.74,78.079,-116.122,-116.067,-138.978,-116.121,-139,-116.055,-139.01,-138.74,-116.412,-116.354,78.815,79.019,-116.163,78.013,79.001,-138.986,-116.491,-138.97,-116.013,-138.965,-139,-138.843,-116.409,-116,-116.055,-116,88.736,-138.94,-138,-116.42,-116.004,-138.841,-139.046,-116.214,88.799,-116,-116,-116.494,54.827,-138.852,-116.371,-138.96,-116.074,-116.313,-116.442,-138,-139.014,-138.766,-139.065,-138,-138.995,-116.002,-116.428,-116.166,-116.045,-116.07,-116.36,-116,88.813,-116.01,-116.031,-116.21,-115.988,88.387,88.695,88.71,88.753,88.82,88.8,-138.844,-138.745,-138.983,-139.032,-138.973,-138.815,88.76,88.35,71.7,71.7,64.89,63.78],[210,150,210,210,210,370,490,180,220,10,80,10,80,220,810,470,2250,455,380,420,0,35,140,210,310,12,12,10,10,310,190,120,110,150,140,250,104000,5000,160,240,2,110,2,230,430,270,320,150,610,4000,280,58,16,49,100,80,150000,110000,1100,69000,135000,16900,400,2,0.3,20,40,8,0,620,28,100,10,20,70,430,40,80,10,140,30,30,20,220,290,300,280,13,120,12,35,0,0,0,2500,16000,0,3,140,55,400,150,38000,35000,1.9,149,137,3650,80,14.9,17,600,152,11000,3600,18500,45000,50000,2500,270,9000,510,380,150,15,30,100,9000,400,100,190,420,570,6800,220,3200,0,3000,120,7200,1.4,0.005,100,2000,370,0,740,170,20,100,97,0,190,0,170,5200,110,1,0,47,440,110,2,3,320,10,59,10,110,120,17,190,16000,60,130,120,29000,80,250,100,18000,0,5,120,13,5,0,8600,2500,15000,12,400,350,0,140,1.6,120,6500,180,17,30000,180,13600,810,13700,90,59,251,3300,570,116,920,150,80,2130,3190,14500,110,4120,8800,89000,140,52,2200,3970,93000,0,2550,650,2020,20000,38000,0,38000,0.2,240,10,10,10000,10,8000,0.38,0.15,0.83,0.015,250,0,0.02,0.13,20,12000,9000,2900,400,90,150,0.77,0.055,55,0.72,680,0.79,14500,14,1.15,15000,0.012,50,0.37,0.24,29000,0.9,400,0,4400,0,20,28000,60,1.15,1.88,0,10000,0.21,0.017,1900,0,0.007,49,22,0.006,0.55,0.078,0,13,220,0.002,0,100,100,0,0,0,0,160,90,160,110,11,3.8,27000,120,8.8,3,11500,60,0.01,4,12000,26,8300,0,200,10000,0.04,7.5,0.3,48,1500,8,2600,12,30,0,2500,130,15000,40000,400,150,0,10,150,66,0.01,14500,125000,48,3000,5,160,12,12,0,0.9,500000,50000,1500,27,1200,2800,6,0,9,150,1500,60,2,0,134,30,5,0,1.5,51,64,0,0.01,30.7,71,57,19,0,119,0,95,4.3,0,84,0,34,0,106,0,0,18.5,0,1900,4100,0,200,10900,6700,0,1000,1000,0,500,0,5000,400,970,45,730,0,26,430,0,0,7820,2100,30000,12000,29,8000,520,22,0,815,76500,670,0,12700,0,1040,0,14000,10000,38800,5,200,0,0,0,24,16,38,211000,99,1500,74,58,28000,200,16000,60,30,25,0,0,0.01,15000,42000,110,27,800,0,19000,0,31000,32500,13500,15000,0,24000,2.1,12,70,191000,100000,13,0,750,1150,113,3200,80,150,92,0,0,49,0.01,15900,0,125,67,0,3000,82000,2000,2600,0,8000,78,3000,78,3600,12,2800,83000,100,30,2400,3000,2000,3900,450,47,84,0,4,0,1,0,120,0,180,0,0.31,0,24,0,0,0,0,0,1100,690,83,63,4300,83,24,0,0.07,0.28,242000,11000,31000,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,0,0,0,31,0,0,0,0,0,0,0,0,0,2490,0,0,0,0,200,0,0,120,0,0,200,0,53,100,200,105,0,0,0,0,0,0,200,0,0,200,0,0,0,200,0,0,0,0,200,0.01,0,0,0,0,0,0,200,0,200,0,0,0.01,44,0,0,0,0,0,0.01,0,0.01,0,380,220,0,53,0,0.01,0,120,200,0,200,0,13,27,0,0.92,0,1400,0,0.01,0,3.3,101,0,0,0,0.01,200,0,200,0.01,23,0,43,0,0,0,70,0.01,0,350,0,7.5,0,0,76,13,0,0,0.01,0,0,0,200,0.01,0,0,0,0,200,0.01,0,0,0.01,11,800,0,290,0,0,200,0,200,0.01,0,200,0,0,0,0,1250,0,190,0,0,0,0,1000,0,0,0,0,700,0.01,11,14,0,0,0,120,730,40,2500,0,200,200,220,620,200,0,0,200,250,200,3650,0,0,200,0,0,0.01,0,0,0.01,0.01,0,78,0,0,0,300,2000,0,200,120,1500,1500,0.01,0,0,0,0.01,0,0.01,3.8,0,0,200,8700,1220,0,390,200,0,0.01,0,0,200,200,0,0,0,0.01,0,0,0,200,0,0,200,2500,1550,760,0,0,0,33000,0,0,0,0.01,100,0,0,0.01,200,0.01,0,0,0,0,0,0.01,200,0,0.01,22,100,200,3,0.01,200,200,0,0,0,0.01,0,0.01,0,0.01,290,0,150,0.01,74,200,2000,0,23,0,200,0,0,0,11,15,200,0,0,0,200,0,0.01,13000,0,0,200,470,0,0,0,0,0.01,200,0.01,0,0,200,270,0,0.01,0,0,200,0,0,0,0,10000,0,200,0.01,200,10000,0,200,0,600,0,0,0,2.4,0,0.01,0,0,200,0,0,0.01,2.4,0,0,0,0,300,0,0,0,0.01,11500,30000,100,200,0,200,0,0,0,0,200,0,0,0,0,0.01,0.01,0,200,200,200,0,0.01,200,0,0.01,0,0,0.01,200,200,160,0,0,0,76,76,400,0.01,0,0,0,250,100,30000,0.01,0,10000,2000,200,0,110,167,1100,0.01,17,200,0,0.01,1250,0,300,0,0,200,0,0,400,0.01,0,0.01,0,200,200,250,0,0,200,200,87,0,0,200,10000,0.01,127,200,0,0,0,0,0,200,0,0,200,0,0,0,0.01,0,0,0,0,23,0,200,0.01,0,0.01,0.01,0,0,0,0.01,0.01,0,1500,34000,200,0,0.01,200,0,0,800,200,0,0,200,2200,100,750,0.01,200,0.01,150,2.3,900,0.01,0,160,0,0,0.01,200,0,200,0,0.01,0,23,0,830,0,23,0,0,0,0,0,0,200,23,0,1500,0,0,23,0,120,0,230,150,0,150,0,0,0,200,0,0,0.01,640,200,0.01,0,80,0,160,0,0.01,1700,0,0,0,150,0,0,0,0,0,0,0,0.01,0,0,0,0,0,0,0.01,38,0,0,0,0.01,0,0,80,66,0.01,200,20,21,23,200,150,66,1650,0,0,0,23,66,0,1400,0,0,0,0,0.01,0,200,200,0,0,0.01,0,900,0,0,330,0,0,0,2000,200,0,200,0,0,0,1500,0,63,0,0,63,0,1500,0,63,0,200,100,0,0,0,0.01,100,15000,0.01,0,0,0,200,0,0,0.01,0,0,200,0,0,0,0.01,0,0,0,0.01,0,0,200,200,0,0,2000,0,0.01,0,0,100,0.01,200,0,0,0,0,0.01,0,76,0,0,0.01,76,200,0.01,0,0,200,0,17,0.01,0,0,15000,0,0,0.01,17,0.01,38,0,200,0,0,0,0.01,0.01,200,200,0.01,0,200,3.5,200,200,2000,200,200,0,0.01,0,0,2000,2000,0.01,0.01,0.01,76,0.01,0,76,0.01,1500,1500,200,0,0,2000,200,0,2000,0,0,0.01,200,200,2000,0.01,0,200,200,2000,2000,0,2000,5000,2000,2000,0.01,0,0,0.01,0.01,0.01,0,0.01,0,0.01,200,0,0,0.01,200,580,0.01,200,200,200,200,0,100,0,0.01,0,150,0,20000,200,0,0,0.01,0.01,0,0,0,200,0.01,0,0,0,0,200,0,0,200,0.01,200,200,200,0,0,0.01,0,0,150,0,0.01,200,85,0,0,0.01,200,0,85,0.01,0.01,76,0,0,200,100,0.01,1,0,0.01,200,0.1,0,200,0,0.01,0,0,0.01,0.01,200,0,0,0.01,0,0,200,0,60,0,0.01,0,200,0,0,0.01,200,200,0.01,0,0,0,0.01,0,0,200,0,200,0,200,0,0,0.01,220,0.01,220,0,200,200,0.8,0,200,0.01,150,0,200,200,0,150,0,0.01,0.01,220,0.01,0,0,0.01,0,200,0.01,0.01,0,0.6,0,0.01,0,200,0,1030,0,0.01,5,0.01,0,0.01,200,200,0.01,0,0,0,0,0,0,0,0.01,0,0.01,200,0,0,0,200,200,0,0.01,0.01,0.01,0.01,0,0,200,0.01,200,85,0.01,200,1400,85,0,3,0.01,200,0.01,220,150,0.01,0.01,0.01,0.01,0,0,0,0.01,0.01,0,0.01,0.01,0,0,0,0,0,0,0,200,0.01,0,0.01,200,0.01,206,60,0.01,0,200,200,0,32,0,0,32,0.01,0.01,0,0,0,200,0.01,0,200,0.01,200,1070,85,0.01,200,2000,0.01,0,0,0.01,0,0,0,0.01,0.01,150,0.01,200,0.01,0.01,200,0,0,0,0,0,0,0.01,0,0.01,0,376,0.01,0,0,200,0.01,0,0,0,0,0.01,0,0,0,0.01,0,32,0,200,0,85,85,0.01,200,0,0.01,85,0,0,200,200,0.01,0.01,200,0,0,0,0.01,200,1390,200,200,0.01,0,0,0,0,0,0,200,200,0,200,0,200,0.01,0,0,0.01,0,0,200,85,1380,0,0.01,0.01,0,160,0.01,0,0,200,85,0,30,150,0.01,135,85,85,85,0,0,0.01,200,0.01,200,0,0,0,200,0.01,0.01,0,0,0,0,0,0,0,0,0.01,0,0.01,0,0.01,0,150,150,150,0,0,0,0,0.01,0,1430,0.01,0,0,0,85,85,85,85,85,85,0.01,0,0.01,200,200,0.01,0.01,0.01,0.01,0,0,0,200,0.01,200,0,200,200,200,200,0,0.01,0.01,200,0,0,0,0,0.01,200,0,0,200,0,0.01,150,150,150,200,0,85,85,0.01,17,32,32,0,0,0.01,200,100,0,150,0.01,0.01,200,32,32,0,0,0,0.01,0,0.01,0,200,200,0.01,50,0,0.01,0.01,200,200,200,0,200,0,200,0,0,0,200,0,0.01,25,0,0.01,0.01,85,0.01,200,0.01,200,0,0,0,0,0,200,0,0,0,0,0,200,200,290,0,0,0,0,0,0,0,0,200,200,1190,0,0,0,200,200,0,0,200,0,0,200,0,0,0.01,0.01,0,200,0.01,0.01,200,32,32,0,300,0,0.01,0,500,0.01,0,0,0.01,0,0,0,150,200,200,150,0.01,0.01,32,200,0.01,200,85,0.01,200,0,0,0.01,0,0,0,0,0.01,0.01,0.01,0,0.01,200,200,0,0.01,200,0.01,0,0,0,0,0,0.01,0,0,0,0,0,0,150,0,0,85,200,10,0,0.01,0,0,0,0.01,0,0,0,0,0,0,0.01,0.01,0.01,200,200,0.01,0,200,0,0,0,0,0,0,200,200,200,0.01,0,0.01,0.01,0,200,0,0,0,0,0,200,0,200,0,150,0,0,200,0,0,0,0,500,0,0,200,0,0,200,0,0,200,200,0,0,0,0,0,0,0,200,0,200,0,200,0,6600,0,0,0,0,10,400,300,300,500,400,0,0,0,0,0,0,300,30,0,0,0,0],null,null,{&#34;interactive&#34;:true,&#34;className&#34;:&#34;&#34;,&#34;stroke&#34;:true,&#34;colorweight&#34;:5,&#34;opacity&#34;:0.5,&#34;fill&#34;:true,&#34;fillColorfillOpacity&#34;:0.2},null,null,null,{&#34;interactive&#34;:false,&#34;permanent&#34;:false,&#34;direction&#34;:&#34;auto&#34;,&#34;opacity&#34;:1,&#34;offset&#34;:[0,0],&#34;textsize&#34;:&#34;10px&#34;,&#34;textOnly&#34;:false,&#34;className&#34;:&#34;&#34;,&#34;sticky&#34;:true},null,null]},{&#34;method&#34;:&#34;addLegend&#34;,&#34;args&#34;:[{&#34;colors&#34;:[&#34;#1B9E77&#34;,&#34;#D95F02&#34;,&#34;#7570B3&#34;,&#34;#E7298A&#34;,&#34;#66A61E&#34;,&#34;#E6AB02&#34;,&#34;#A6761D&#34;],&#34;labels&#34;:[&#34;CHINA&#34;,&#34;FRANCE&#34;,&#34;INDIA&#34;,&#34;PAKIST&#34;,&#34;UK&#34;,&#34;USA&#34;,&#34;USSR&#34;],&#34;na_color&#34;:null,&#34;na_label&#34;:&#34;NA&#34;,&#34;opacity&#34;:1,&#34;position&#34;:&#34;bottomright&#34;,&#34;type&#34;:&#34;factor&#34;,&#34;title&#34;:&#34;País&#34;,&#34;extra&#34;:null,&#34;layerId&#34;:null,&#34;className&#34;:&#34;info legend&#34;,&#34;group&#34;:null}]}],&#34;limits&#34;:{&#34;lat&#34;:[-49.5,75.1],&#34;lng&#34;:[-169.32,179.22]}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Vida e (principalmente) morte dos Imperadores Romanos</title>
      <link>/post/roma/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/roma/</guid>
      <description>


&lt;p&gt;A &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;Tidy Tuesday&lt;/a&gt; dessa semana trás uma base de dados com a vida e morte dos imperadores romanos. Vamos começar importando os dados e usando &lt;code&gt;glimpse&lt;/code&gt; para dar aquela olhadela em como eles estão estruturados. Para manipulação desse database com maior facilidade, vamos usar o pacote &lt;code&gt;lubridate&lt;/code&gt;, &lt;a href=&#34;https://lubridate.tidyverse.org/&#34;&gt;criado para lidar com tempo e datas&lt;/a&gt;, o que nunca é uma tarefa trivial.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(tidyverse, janitor, lubridate, extrafont)

#font_import() #Necessário rodar essa linha uma vez na vida para importar as fontes de seu computador para o R
loadfonts(device = &amp;quot;win&amp;quot;)

imperadores &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-13/emperors.csv&amp;quot;) %&amp;gt;% 
  mutate(birth = case_when(str_detect(notes, 
                                      &amp;quot;BCE&amp;quot;) ~ birth - years(2*year(birth)),
                           TRUE ~ birth),
         reign_start = case_when(
           str_detect(notes, 
                      &amp;quot;reign.start are BCE&amp;quot;) ~ reign_start - years(2*year(reign_start)),
           TRUE ~ reign_start),
         age_death = lubridate::time_length(lubridate::interval(start = birth,
                                                                end = death),
                                            unit = &amp;quot;year&amp;quot;),
         reign_duration = lubridate::time_length(lubridate::interval(start = reign_start,
                                                                     end = reign_end),
                                                 unit = &amp;quot;year&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Criei uma coluna com a idade da morte e duração do reino de cada imperador. Como alguns deles (dois, pra ser preciso) nasceram antes e morreram depois do ano 0, usei &lt;code&gt;case_when()&lt;/code&gt; pra corrigir a conta da idade pra esses casos. Note o uso das funções &lt;code&gt;time_length()&lt;/code&gt; e &lt;code&gt;interval()&lt;/code&gt; do pacote &lt;code&gt;lubridate&lt;/code&gt; para extrair o valor (numérico) do intervalo em anos entre duas datas.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;imperadores %&amp;gt;% glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 68
## Variables: 18
## $ index          &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1...
## $ name           &amp;lt;chr&amp;gt; &amp;quot;Augustus&amp;quot;, &amp;quot;Tiberius&amp;quot;, &amp;quot;Caligula&amp;quot;, &amp;quot;Claudius&amp;quot;, &amp;quot;Ner...
## $ name_full      &amp;lt;chr&amp;gt; &amp;quot;IMPERATOR CAESAR DIVI FILIVS AVGVSTVS&amp;quot;, &amp;quot;TIBERIVS C...
## $ birth          &amp;lt;date&amp;gt; -062-09-23, -041-11-16, 0012-08-31, -009-08-01, 003...
## $ death          &amp;lt;date&amp;gt; 0014-08-19, 0037-03-16, 0041-01-24, 0054-10-13, 006...
## $ birth_cty      &amp;lt;chr&amp;gt; &amp;quot;Rome&amp;quot;, &amp;quot;Rome&amp;quot;, &amp;quot;Antitum&amp;quot;, &amp;quot;Lugdunum&amp;quot;, &amp;quot;Antitum&amp;quot;, &amp;quot;T...
## $ birth_prv      &amp;lt;chr&amp;gt; &amp;quot;Italia&amp;quot;, &amp;quot;Italia&amp;quot;, &amp;quot;Italia&amp;quot;, &amp;quot;Gallia Lugdunensis&amp;quot;, ...
## $ rise           &amp;lt;chr&amp;gt; &amp;quot;Birthright&amp;quot;, &amp;quot;Birthright&amp;quot;, &amp;quot;Birthright&amp;quot;, &amp;quot;Birthrigh...
## $ reign_start    &amp;lt;date&amp;gt; -026-01-16, 0014-09-18, 0037-03-18, 0041-01-25, 005...
## $ reign_end      &amp;lt;date&amp;gt; 0014-08-19, 0037-03-16, 0041-01-24, 0054-10-13, 006...
## $ cause          &amp;lt;chr&amp;gt; &amp;quot;Assassination&amp;quot;, &amp;quot;Assassination&amp;quot;, &amp;quot;Assassination&amp;quot;, &amp;quot;...
## $ killer         &amp;lt;chr&amp;gt; &amp;quot;Wife&amp;quot;, &amp;quot;Other Emperor&amp;quot;, &amp;quot;Senate&amp;quot;, &amp;quot;Wife&amp;quot;, &amp;quot;Senate&amp;quot;,...
## $ dynasty        &amp;lt;chr&amp;gt; &amp;quot;Julio-Claudian&amp;quot;, &amp;quot;Julio-Claudian&amp;quot;, &amp;quot;Julio-Claudian&amp;quot;...
## $ era            &amp;lt;chr&amp;gt; &amp;quot;Principate&amp;quot;, &amp;quot;Principate&amp;quot;, &amp;quot;Principate&amp;quot;, &amp;quot;Principat...
## $ notes          &amp;lt;chr&amp;gt; &amp;quot;birth, reign.start are BCE. Assign negative for cor...
## $ verif_who      &amp;lt;chr&amp;gt; &amp;quot;Reddit user zonination&amp;quot;, &amp;quot;Reddit user zonination&amp;quot;, ...
## $ age_death      &amp;lt;dbl&amp;gt; 75.90411, 77.32877, 28.40000, 63.20000, 30.48361, 70...
## $ reign_duration &amp;lt;dbl&amp;gt; 40.5890411, 22.4904110, 3.8547945, 13.7150685, 13.65...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A primeira coisa que eu gostaria de ver é uma distribuição das causas de morte dos imperadores. Tenho impressão que não era um trabalho fácil. A função &lt;code&gt;fct_reorder()&lt;/code&gt;, do pacote &lt;code&gt;forcats&lt;/code&gt;, &lt;a href=&#34;https://forcats.tidyverse.org/&#34;&gt;pacote feito para manipulação de fatores&lt;/a&gt;, nos ajuda a deixar os fatores na ordem decrescente que queremos para gráfico.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resumo_causas &amp;lt;- imperadores %&amp;gt;%
  group_by(cause) %&amp;gt;% 
  summarise(contar = n()) %&amp;gt;% 
  mutate(cause = forcats::fct_reorder(cause, -contar)) #mantendo a ordem decrescente

resumo_causas %&amp;gt;% 
  ggplot(aes(x = cause, y = contar/sum(contar))) +
  geom_col() +
  geom_text(aes(label = scales::percent(contar/sum(contar), accuracy = 1)),
            color = &amp;quot;white&amp;quot;, fontface  = &amp;quot;bold&amp;quot;, vjust = 1) +
  scale_y_continuous(&amp;quot;% de Mortes&amp;quot;,
                     breaks = 0.05 * 0:8,
                     labels = scales::percent(0.05 * 0:8, accuracy = 1)) +
  labs(x = NULL,
       title = &amp;quot;Causas de Morte dos Imperadores Romanos&amp;quot;,
       caption = &amp;quot;Fonte: Tidy Tuesday - Elaborado por Edgar Cutar Junior&amp;quot;) +
  theme_bw() +
  theme(text = element_text(family = &amp;quot;RomanT&amp;quot;),
        axis.text.x = element_text(angle = -5, vjust = -0.5)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not
## found in Windows font database

## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not
## found in Windows font database

## Warning in grid.Call(C_stringMetric, as.graphicsAnnot(x$label)): font family not
## found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database

## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-13-roma/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Realmente não era uma vida tranquila.&lt;/p&gt;
&lt;p&gt;Agora, para unir as mortes violentas em um grupo só, podemos usar &lt;code&gt;fct_collapse()&lt;/code&gt;, também do pacote &lt;code&gt;forcats&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;resumo_coll &amp;lt;- resumo_causas  %&amp;gt;% 
  mutate(cause2 = fct_collapse(cause, 
                               mortes_violentas = c(&amp;quot;Assassination&amp;quot;, &amp;quot;Execution&amp;quot;, 
                                                    &amp;quot;Died in Battle&amp;quot;, &amp;quot;Suicide&amp;quot;,
                                                    &amp;quot;Captivity&amp;quot;),
                               causas_naturais = c(&amp;quot;Natural Causes&amp;quot;),
                               outros = &amp;quot;Unknown&amp;quot;))

resumo_coll %&amp;gt;% 
  ggplot(aes(x = cause2, y = contar/sum(contar))) +
  geom_col(aes(fill = cause)) +
  scale_y_continuous(&amp;quot;% de Mortes&amp;quot;,
                     breaks = 0.05*0:16,
                     labels = scales::percent(0.05*0:16)) +
  labs(x = NULL,
       fill = NULL, 
       title = &amp;quot;Causas de Morte dos Imperadores Romanos&amp;quot;,
       caption = &amp;quot;Fonte: Tidy Tuesday - Elaborado por Edgar Cutar Junior&amp;quot;) +
  scale_fill_viridis_d() +
  scale_x_discrete(labels = c(&amp;quot;Mortes Violentas&amp;quot;, &amp;quot;Causas Naturais&amp;quot;, &amp;quot;Outros&amp;quot;)) +
  theme_bw() +
  theme(text = element_text(family = &amp;quot;RomanT&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call.graphics(C_text, as.graphicsAnnot(x$label), x$x, x$y, :
## font family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database

## Warning in grid.Call(C_textBounds, as.graphicsAnnot(x$label), x$x, x$y, : font
## family not found in Windows font database&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-13-roma/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Pelo menos 65% dos imperadores romanos morreram violentamente. Isso me deixa curioso para saber quantos golpes de Estado ocorreram em Roma e com qual frequência eles aconteceram.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;golpes &amp;lt;- imperadores %&amp;gt;% 
  filter(rise == &amp;quot;Seized Power&amp;quot;) %&amp;gt;% 
  mutate(imperadores_entre_golpes = ifelse(is.na(lag(index)),
                                           index,
                                           index - lag(index)),
         anos_entre_golpes = time_length(interval(start = lag(reign_start),
                                                  end = reign_start),
                                         unit = &amp;quot;year&amp;quot;),
         anos_entre_golpes = ifelse(!is.na(anos_entre_golpes), #corrigindo primeiro período
                                    anos_entre_golpes,
                                    time_length(interval(start = imperadores$reign_start[1],
                                                         end = reign_start),
                                                unit = &amp;quot;year&amp;quot;)))

golpes %&amp;gt;% 
  summarise(max_imper = max(imperadores_entre_golpes),
            med_imper = mean(imperadores_entre_golpes),
            min_imper = min(imperadores_entre_golpes),
            max_anos = max(anos_entre_golpes),
            med_anos = mean(anos_entre_golpes),
            min_anos = min(anos_entre_golpes)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 6
##   max_imper med_imper min_imper max_anos med_anos min_anos
##       &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;     &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1        12       6.1         1     123.     37.6    0.679&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Algumas pílulas saídas desse resumo:&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Na média, houve um golpe a cada 37 anos. O maior período sem golpe foi após o golpe de Vespasiano, em 79 DC. Foram 123 anos sem golpes de estado. De origem humilde, Vespasiano ganhou poder no exército após o Suicídio de Nero em 68 DC. Nas convulsões políticas que tomaram Roma nessa época, ele foi aclamado Imperador pelo exército e marchou contra Roma e Vitélio, que também havia subido ao poder pela força, ainda naquele ano.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;69 DC ficou conhecido como “O ano dos 4 imperadores”. Foram Galba, Otho, Vitélio e Vespasiano, que se consolidou no poder, onde ficou até falecer, 10 anos depois, como o 4º imperador mais velho a falecer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Vitélio consagra seu império o período mais curto entre golpes, tomou o poder em abril e foi deposto (e executado) em dezembro.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Por fim, vamos usar &lt;code&gt;geom_segment()&lt;/code&gt; para fazer um gráfico mostrando todos os imperadores de Roma, com suas vidas, mortes e reinados.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;imperadores %&amp;gt;% 
  mutate(cause2 = fct_collapse(cause, 
                               `Mortes Violentas` = c(&amp;quot;Assassination&amp;quot;, &amp;quot;Execution&amp;quot;, 
                                                    &amp;quot;Died in Battle&amp;quot;, &amp;quot;Suicide&amp;quot;,
                                                    &amp;quot;Captivity&amp;quot;),
                               `Causas Naturais` = c(&amp;quot;Natural Causes&amp;quot;),
                               `Outros` = &amp;quot;Unknown&amp;quot;),
         name = fct_reorder(name, -index)) %&amp;gt;% 
  ggplot(aes(x = reign_start,
             y = name,
             color = cause2)) +
  geom_segment(aes(x = birth, 
                   xend = reign_end, 
                   yend = ..y..), 
               size = 1.5, 
               lineend = &amp;quot;round&amp;quot;) +
  geom_point(aes(x = reign_start, fill = &amp;quot;Reinado&amp;quot;), color = &amp;quot;red&amp;quot;) +
  geom_segment(aes(x = reign_start, 
                   xend = reign_end, 
                   yend = ..y..,
                   color = &amp;quot;Reinado&amp;quot;), 
               color = &amp;quot;red&amp;quot;,
               size = 1, lineend = &amp;quot;round&amp;quot;) +
  scale_color_viridis_d() +
  scale_x_date(labels = function(x) str_glue(&amp;quot;{year(x)} DC&amp;quot;)) +
  labs(title = &amp;quot;Nascimento, Reinado e Morte\ndos Imperadores Romanos&amp;quot;,
       color = &amp;quot;Causa Mortis&amp;quot;,
       caption = &amp;quot;Fonte: Tidy Tuesday - Elaborado por Edgar Cutar Junior&amp;quot;,
       fill = NULL,
       x = NULL,
       y = NULL) +
  theme_bw() +
  theme(text = element_text(family = &amp;quot;RomanT&amp;quot;)) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-13-roma/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;768&#34; /&gt;&lt;/p&gt;
&lt;p&gt;O que mais impressiona é que depois da morte de Septimus Severus, em 211, houve 13 imperadores seguidos mortos de forma violenta. Depois dos 13, Hostilian assumiu por apenas 105 dias antes de morrer de causas naturais. Depois dele, mais 4 imperadores morreram de causas violentas.&lt;/p&gt;
&lt;p&gt;Pra quem sentiu falta de Julio César, aquele do “Até tu, Brutus?”, ele foi um dos últimos ícones da República Romana, e um dos que ajudou a formar o império, que começou 18 anos após sua morte.&lt;/p&gt;
&lt;p&gt;Tem alguma crítica, sugestão, ou quer bater um papo? Me chama no &lt;a href=&#34;http://twitter.com/edgar_cutar&#34;&gt;Twitter&lt;/a&gt;!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lidando com dados longitudinais e pareamento de dados</title>
      <link>/post/longitudinal/</link>
      <pubDate>Sun, 11 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/post/longitudinal/</guid>
      <description>


&lt;p&gt;Quando falamos em bases de dados, existem basicamente dois grandes tipos de dados: &lt;strong&gt;Transversais&lt;/strong&gt; e &lt;strong&gt;Longitudinais&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Dados transversais (também chamados de &lt;em&gt;cross-section&lt;/em&gt;) são o tipo de dado mais comum encontrado em qualquer área de estudo. Nesse tipo de base, existe uma observação para cada “indivíduo”. Como uma fotografia, ou um recorte, da população a ser estudada, um dado transversal tenta captar as variações que ocorrem na população através de uma imagem estática.&lt;/p&gt;
&lt;p&gt;Um grande exemplo de dado transversal é a base de dados &lt;code&gt;starwars&lt;/code&gt; do pacote &lt;code&gt;dplyr&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(tidyverse, datasets)

dplyr::starwars&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 87 x 13
##    name  height  mass hair_color skin_color eye_color birth_year gender
##    &amp;lt;chr&amp;gt;  &amp;lt;int&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; 
##  1 Luke~    172    77 blond      fair       blue            19   male  
##  2 C-3PO    167    75 &amp;lt;NA&amp;gt;       gold       yellow         112   &amp;lt;NA&amp;gt;  
##  3 R2-D2     96    32 &amp;lt;NA&amp;gt;       white, bl~ red             33   &amp;lt;NA&amp;gt;  
##  4 Dart~    202   136 none       white      yellow          41.9 male  
##  5 Leia~    150    49 brown      light      brown           19   female
##  6 Owen~    178   120 brown, gr~ light      blue            52   male  
##  7 Beru~    165    75 brown      light      blue            47   female
##  8 R5-D4     97    32 &amp;lt;NA&amp;gt;       white, red red             NA   &amp;lt;NA&amp;gt;  
##  9 Bigg~    183    84 black      light      brown           24   male  
## 10 Obi-~    182    77 auburn, w~ fair       blue-gray       57   male  
## # ... with 77 more rows, and 5 more variables: homeworld &amp;lt;chr&amp;gt;, species &amp;lt;chr&amp;gt;,
## #   films &amp;lt;list&amp;gt;, vehicles &amp;lt;list&amp;gt;, starships &amp;lt;list&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essa base mostra uma série de dados (altura, peso, cor de cabelo, pele e olhos) de diversos personagens da franquia Star Wars. Cada personagem aparece apenas uma vez (com exceção de Anakin Skywalker/Darth Vader, que aparece como dois personagens, mas divago).&lt;/p&gt;
&lt;p&gt;O outro tipo de dado é o “longitudinal”. Nesse tipo de estudo, os dados são coletados repetidamente para ao mesmo indivíduo. Olhando para a base do Star Wars, se tivessemos dados da vida dos personagens, ela se tornaria longitudinal. Por exemplo, teríamos dados do Luke Skywalker com seu peso e altura em diversas fases da sua vida.&lt;/p&gt;
&lt;p&gt;Uma base longitudinal, como você deve imaginar, é muito mais complicada de se obter, mas permite análises também mais complexas. É possível determinar tipos de crescimento, entender comportamentos antes/depois de certos acontecimentos (resposta a um remédio, sobrevida depois de uma cirurgia, medições de variáveis climáticas ao redor do globo). Conseguir uma base longitudinal leva tempo e custa caro, mas existem determinadas aplicações que necessitam desse tipo de dado.&lt;/p&gt;
&lt;p&gt;Dentro da área florestal, existe um uso específico que exige dados longitudinais: os modelos de crescimento florestal. Para que seja possível entender os padrões de crescimento de um povoamento florestal, é preciso que sejam coletadas amostras de um determinado conjunto de árvores repetidamente ao longo do tempo.&lt;/p&gt;
&lt;p&gt;Dessa forma, ficamos com uma base de dados como a abaixo:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;parcela &amp;lt;- read_csv2(&amp;quot;https://raw.githubusercontent.com/edgarcutar/example_data/master/parcelas.csv&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using &amp;#39;,&amp;#39; as decimal and &amp;#39;.&amp;#39; as grouping mark. Use read_delim() for more control.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   parcela_amostral = col_character(),
##   idade = col_double(),
##   volume = col_double(),
##   area_basal = col_double(),
##   altura_dominante = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;parcela&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 9 x 5
##   parcela_amostral idade volume area_basal altura_dominante
##   &amp;lt;chr&amp;gt;            &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;      &amp;lt;dbl&amp;gt;            &amp;lt;dbl&amp;gt;
## 1 A                    2   53.7        9.9             12.9
## 2 A                    3  131         17.4             19.4
## 3 A                    4  220.        23.2             24.1
## 4 B                    2   93.8       14.4             15.8
## 5 B                    3  163.        18.7             20.9
## 6 B                    4  217.        21.1             25.4
## 7 C                    2   59.5       10.4             14.9
## 8 C                    3  122.        15.3             19.8
## 9 C                    4  175.        18.2             24.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nesse caso, existem medições da mesma parcela amostral ao longo de 3 anos. Com esse tipo de dado é possível construir um modelo de crescimento e produção para aquele tipo de floresta.&lt;/p&gt;
&lt;p&gt;Para que seja possível construir um modelo desse tipo, existe um passo extra necessário, é necessário organizar &lt;strong&gt;pares de observações&lt;/strong&gt;, em linha, de forma a parear estas bases de forma a conseguir ajustar um modelo do tipo &lt;span class=&#34;math inline&#34;&gt;\(Vol_2 \sim 1 + I_2 + Vol_1 + I_1\)&lt;/span&gt;, ou seja, um Volume no tempo 2 em função da idade no tempo 2, volume no tempo 1 e idade no tempo 1.&lt;/p&gt;
&lt;p&gt;Um exemplo desse tipo de modelo é o de Lundqvist-Korf, em que uma de suas equações diferenciais pode ser escrita do seguinte modo:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Vol_2 = a*(Vol_1/a)^(I_1/I_2)^c\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Para que seja possível ter uma base pronta para esse ajuste, é necessário que seja feito o pareamento dos dados, ou seja, cada idade deve ser combinada às demais. É basicamente uma combinatória com algumas regras:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Devem ser pareadas apenas as mesmas medições das parcelas;&lt;/li&gt;
&lt;li&gt;A idade 2 deve ser maior que a idade 1;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Para fazer essa combinatória, elaborei uma função de pareamento, apresentada abaixo e aplicada aos dados do nosso exemplo. Apesar de ter pensado ela para dados florestais, a mesma pode ser usada com poucas modificações para quaisquer origem de dados.&lt;/p&gt;
&lt;p&gt;A função terá 3 argumentos:
- &lt;strong&gt;table&lt;/strong&gt;: o data frame a ser pareado
- &lt;strong&gt;id&lt;/strong&gt;: o identificador único de sua parcela amostral
- &lt;strong&gt;idade&lt;/strong&gt;: sua variável indicando o tempo de medição. Pode ser idade, ano, mês… a coluna que indica QUANDO a medição foi feita, em relação ao &lt;span class=&#34;math inline&#34;&gt;\(t_0\)&lt;/span&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(dplyr)

pareamento &amp;lt;- function(table, id, idade){
  
  expand.grid.df &amp;lt;- function(...) Reduce(function(...) merge(..., by=NULL), list(...)) #Cria Função combinatória
  
  id_ &amp;lt;- sym(ensym(id)) #transforma inputs em strings e depois em objetos
  idade1 &amp;lt;- sym(str_c(ensym(idade), &amp;quot;.x&amp;quot;))
  idade2 &amp;lt;- sym(str_c(ensym(idade), &amp;quot;.y&amp;quot;))
  
  par_unique &amp;lt;- unique(table %&amp;gt;%
                         pull(!!id_))
  
  output &amp;lt;- vector(&amp;quot;list&amp;quot;, length(par_unique)) # cria output de listas vazio
  
  p &amp;lt;- progress_estimated(length(par_unique)) # Cria barra de progresso
  
  for (i in seq_along(par_unique)) {
    
    a &amp;lt;- table %&amp;gt;% filter(!!id_ == par_unique[i])  #filtra parcela i
    b &amp;lt;- expand.grid.df(a,a) #combinatória de parcela amostral
    c &amp;lt;- b %&amp;gt;% filter(!!idade2 &amp;gt; !!idade1) #separa i2 &amp;gt; i1
    output[[i]] &amp;lt;- c # cria lista i com output 
    
    p$tick()$print() #print barra de progresso
  }
  bind_rows(output) #combina output em um único data frame
}

#Aplicando a função a nosso exemplo
parcela %&amp;gt;% 
  pareamento(id = parcela_amostral, idade = idade)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   parcela_amostral.x idade.x volume.x area_basal.x altura_dominante.x
## 1                  A       2     53.7          9.9               12.9
## 2                  A       2     53.7          9.9               12.9
## 3                  A       3    131.0         17.4               19.4
## 4                  B       2     93.8         14.4               15.8
## 5                  B       2     93.8         14.4               15.8
## 6                  B       3    163.1         18.7               20.9
## 7                  C       2     59.5         10.4               14.9
## 8                  C       2     59.5         10.4               14.9
## 9                  C       3    121.9         15.3               19.8
##   parcela_amostral.y idade.y volume.y area_basal.y altura_dominante.y
## 1                  A       3    131.0         17.4               19.4
## 2                  A       4    219.6         23.2               24.1
## 3                  A       4    219.6         23.2               24.1
## 4                  B       3    163.1         18.7               20.9
## 5                  B       4    217.3         21.1               25.4
## 6                  B       4    217.3         21.1               25.4
## 7                  C       3    121.9         15.3               19.8
## 8                  C       4    174.8         18.2               24.4
## 9                  C       4    174.8         18.2               24.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pode parecer um processo trivial pra uma função tão longa, mas já vi muita gente quebrando cabeça e fazendo macros enormes pra chegar nesse resultado.&lt;/p&gt;
&lt;p&gt;Falei alguma groselha ou tem algum jeito menos maluco de fazer isso? Me avise no &lt;a href=&#34;http://twitter.com/edgar_cutar&#34;&gt;twitter&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Abraços!&lt;/p&gt;
&lt;p&gt;EDIT: Seguindo a dica do amigo &lt;a href=&#34;https://italocegatta.github.io&#34;&gt;Ítalo Cegatta&lt;/a&gt;, substituí as funções &lt;code&gt;deparse(substitute(args))&lt;/code&gt; pela função &lt;code&gt;ensym()&lt;/code&gt;, que é condizente com a &lt;code&gt;tidyeval&lt;/code&gt;, a &lt;em&gt;tidy evaluation&lt;/em&gt; proposta por Hadley Wickham e Lionel Henry, que vocês podem conferir melhor &lt;a href=&#34;https://tidyeval.tidyverse.org/&#34;&gt;aqui&lt;/a&gt; e &lt;a href=&#34;https://adv-r.hadley.nz/quasiquotation.html&#34;&gt;aqui&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Uma Análise (Quase) Estatística De Bob Ross</title>
      <link>/post/2019-08-06-bob/</link>
      <pubDate>Tue, 06 Aug 2019 08:54:32 -0300</pubDate>
      <guid>/post/2019-08-06-bob/</guid>
      <description>


&lt;p&gt;A &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;Tidy Tuesday&lt;/a&gt; dessa semana traz um dataset sobre &lt;a href=&#34;https://pt.wikipedia.org/wiki/Bob_Ross&#34;&gt;Bob Ross&lt;/a&gt;. Bob foi um pintor americano conhecido pelo programa &lt;a href=&#34;https://pt.wikipedia.org/wiki/The_Joy_of_Painting&#34;&gt;&lt;em&gt;The Joy of Painting&lt;/em&gt;&lt;/a&gt;, que foi ao ar nos anos 80 e 90 nos EUA, Canadá e Europa. No seu programa, ele mostrava técnicas de pintura a óleo enquanto completava uma pintura toda semana.&lt;/p&gt;
&lt;p&gt;O dataset sobre o trabalho de Bob Ross foi fornecido para a #tidytuesday pelo site &lt;a href=&#34;https://fivethirtyeight.com/&#34;&gt;538&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)
pacman::p_load(tidyverse, janitor)

bob_ross &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-08-06/bob-ross.csv&amp;quot;) %&amp;gt;% 
  clean_names()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Em primeiro lugar, para ver o que temos nos dados, vamos usar a função &lt;code&gt;head&lt;/code&gt;, que retorna as primeiras linhas da planilha:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bob_ross %&amp;gt;% head()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 69
##   episode title apple_frame aurora_borealis  barn beach  boat bridge building
##   &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt;       &amp;lt;dbl&amp;gt;           &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;  &amp;lt;dbl&amp;gt;    &amp;lt;dbl&amp;gt;
## 1 S01E01  &amp;quot;\&amp;quot;A~           0               0     0     0     0      0        0
## 2 S01E02  &amp;quot;\&amp;quot;M~           0               0     0     0     0      0        0
## 3 S01E03  &amp;quot;\&amp;quot;E~           0               0     0     0     0      0        0
## 4 S01E04  &amp;quot;\&amp;quot;W~           0               0     0     0     0      0        0
## 5 S01E05  &amp;quot;\&amp;quot;Q~           0               0     0     0     0      0        0
## 6 S01E06  &amp;quot;\&amp;quot;W~           0               0     0     0     0      0        0
## # ... with 60 more variables: bushes &amp;lt;dbl&amp;gt;, cabin &amp;lt;dbl&amp;gt;, cactus &amp;lt;dbl&amp;gt;,
## #   circle_frame &amp;lt;dbl&amp;gt;, cirrus &amp;lt;dbl&amp;gt;, cliff &amp;lt;dbl&amp;gt;, clouds &amp;lt;dbl&amp;gt;, conifer &amp;lt;dbl&amp;gt;,
## #   cumulus &amp;lt;dbl&amp;gt;, deciduous &amp;lt;dbl&amp;gt;, diane_andre &amp;lt;dbl&amp;gt;, dock &amp;lt;dbl&amp;gt;,
## #   double_oval_frame &amp;lt;dbl&amp;gt;, farm &amp;lt;dbl&amp;gt;, fence &amp;lt;dbl&amp;gt;, fire &amp;lt;dbl&amp;gt;,
## #   florida_frame &amp;lt;dbl&amp;gt;, flowers &amp;lt;dbl&amp;gt;, fog &amp;lt;dbl&amp;gt;, framed &amp;lt;dbl&amp;gt;, grass &amp;lt;dbl&amp;gt;,
## #   guest &amp;lt;dbl&amp;gt;, half_circle_frame &amp;lt;dbl&amp;gt;, half_oval_frame &amp;lt;dbl&amp;gt;, hills &amp;lt;dbl&amp;gt;,
## #   lake &amp;lt;dbl&amp;gt;, lakes &amp;lt;dbl&amp;gt;, lighthouse &amp;lt;dbl&amp;gt;, mill &amp;lt;dbl&amp;gt;, moon &amp;lt;dbl&amp;gt;,
## #   mountain &amp;lt;dbl&amp;gt;, mountains &amp;lt;dbl&amp;gt;, night &amp;lt;dbl&amp;gt;, ocean &amp;lt;dbl&amp;gt;,
## #   oval_frame &amp;lt;dbl&amp;gt;, palm_trees &amp;lt;dbl&amp;gt;, path &amp;lt;dbl&amp;gt;, person &amp;lt;dbl&amp;gt;,
## #   portrait &amp;lt;dbl&amp;gt;, rectangle_3d_frame &amp;lt;dbl&amp;gt;, rectangular_frame &amp;lt;dbl&amp;gt;,
## #   river &amp;lt;dbl&amp;gt;, rocks &amp;lt;dbl&amp;gt;, seashell_frame &amp;lt;dbl&amp;gt;, snow &amp;lt;dbl&amp;gt;,
## #   snowy_mountain &amp;lt;dbl&amp;gt;, split_frame &amp;lt;dbl&amp;gt;, steve_ross &amp;lt;dbl&amp;gt;, structure &amp;lt;dbl&amp;gt;,
## #   sun &amp;lt;dbl&amp;gt;, tomb_frame &amp;lt;dbl&amp;gt;, tree &amp;lt;dbl&amp;gt;, trees &amp;lt;dbl&amp;gt;, triple_frame &amp;lt;dbl&amp;gt;,
## #   waterfall &amp;lt;dbl&amp;gt;, waves &amp;lt;dbl&amp;gt;, windmill &amp;lt;dbl&amp;gt;, window_frame &amp;lt;dbl&amp;gt;,
## #   winter &amp;lt;dbl&amp;gt;, wood_framed &amp;lt;dbl&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Temos cada uma das 403 pinturas que Bob Ross fez ao longo dos 11 anos e 31 temporadas de &lt;em&gt;The Joy of Painting&lt;/em&gt;, cada uma delas contendo os diversos elementos presentes em cada pintura: casas, barcos, palmeiras, árvores etc.&lt;/p&gt;
&lt;p&gt;Para organizar um pouco a tabela, vamos usar a função &lt;code&gt;gather&lt;/code&gt;, colocando os diversos elementos em uma única coluna e sua existência ou não como outra coluna. Vamos também separar episódio e temporada em colunas próprias, numéricas, usando algumas funções do pacote &lt;code&gt;stringr&lt;/code&gt; e um pouquinho de &lt;code&gt;regex&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bob_ross_gather &amp;lt;- bob_ross %&amp;gt;% 
  separate(episode, into = c(&amp;quot;season&amp;quot;, &amp;quot;episode&amp;quot;), sep = &amp;quot;E&amp;quot;) %&amp;gt;% 
  mutate(season = str_extract(season, &amp;quot;[:digit:]+&amp;quot;)) %&amp;gt;% 
  mutate_at(vars(season, episode), as.integer) %&amp;gt;% 
  gather(apple_frame:wood_framed, key = element, value = presence) %&amp;gt;% 
  print()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 27,001 x 5
##    season episode title                     element     presence
##     &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;                     &amp;lt;chr&amp;gt;          &amp;lt;dbl&amp;gt;
##  1      1       1 &amp;quot;\&amp;quot;A WALK IN THE WOODS\&amp;quot;&amp;quot; apple_frame        0
##  2      1       2 &amp;quot;\&amp;quot;MT. MCKINLEY\&amp;quot;&amp;quot;        apple_frame        0
##  3      1       3 &amp;quot;\&amp;quot;EBONY SUNSET\&amp;quot;&amp;quot;        apple_frame        0
##  4      1       4 &amp;quot;\&amp;quot;WINTER MIST\&amp;quot;&amp;quot;         apple_frame        0
##  5      1       5 &amp;quot;\&amp;quot;QUIET STREAM\&amp;quot;&amp;quot;        apple_frame        0
##  6      1       6 &amp;quot;\&amp;quot;WINTER MOON\&amp;quot;&amp;quot;         apple_frame        0
##  7      1       7 &amp;quot;\&amp;quot;AUTUMN MOUNTAINS\&amp;quot;&amp;quot;    apple_frame        0
##  8      1       8 &amp;quot;\&amp;quot;PEACEFUL VALLEY\&amp;quot;&amp;quot;     apple_frame        0
##  9      1       9 &amp;quot;\&amp;quot;SEASCAPE\&amp;quot;&amp;quot;            apple_frame        0
## 10      1      10 &amp;quot;\&amp;quot;MOUNTAIN LAKE\&amp;quot;&amp;quot;       apple_frame        0
## # ... with 26,991 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora vamos ver quais são os elementos mais presentes nas pinturas e separar os 20 primeiros.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_elements &amp;lt;- bob_ross_gather %&amp;gt;% 
  group_by(element) %&amp;gt;% 
  summarise(presence = sum(presence)) %&amp;gt;% 
  arrange(-presence) %&amp;gt;% 
  top_n(20, presence) %&amp;gt;% 
  mutate(element = factor(element, levels = element)) #transformando em factor para manter a ordem

top_elements %&amp;gt;% 
  ggplot(aes(x = element, y = presence)) + 
  geom_point(size=3) + 
  geom_segment(aes(x = element, 
                   xend = element, 
                   y = 0, 
                   yend = presence)) + 
  labs(x = NULL,
       y = &amp;quot;Nº de Pinturas&amp;quot;,
       title = &amp;quot;Elementos mais presentes nas pinturas de Bob Ross&amp;quot;, 
       caption = &amp;quot;Fonte: Tidy Tuesday (https://github.com/rfordatascience/tidytuesday)&amp;quot;) + 
  coord_flip() +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-06-bob/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, chamam atenção as árvores: 89% de suas pinturas contém ao menos uma árvore, e quase 84% delas possuem mais de uma. Curiosidade: uma vez que Bob pintasse a primeira árvore, ele não pintava a segunda, ele pintava uma “amiga” da primeira. Os dois próximos elementos da lista tratam dos tipos de árvores pintadas, decíduas e coníferas. Para os leigos: árvores que perdem folhas no inverno e pinheiros.&lt;/p&gt;
&lt;p&gt;Essa paisagem de coníferas e decíduas remete ao segundo tema mais constante da obra de Bob Ross, o inverno. Bob Ross ingressou na Força Aérea aos 17 anos (uma coisa que temos em comum). Diferente de mim, no entanto, ele continuou por lá, passando 20 anos na Base Aérea de Eielson, no Alasca. Isso parece ter permeado sua arte, uma vez que pinturas de áreas congeladas parece ter sido um &lt;em&gt;trend&lt;/em&gt; em sua carreira. Montanhas nevadas, neve, inverno, são outros elementos constantes em sua obra.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;cold.jpg&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Puxando para o meu lado florestal, separei manualmente todas as referências a elementos vegetais nas obras de Bob. Se deixei passar algum, me avisem:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;veggies &amp;lt;- c(&amp;quot;bushes&amp;quot;, &amp;quot;cactus&amp;quot;, &amp;quot;conifer&amp;quot;, &amp;quot;deciduous&amp;quot;, 
             &amp;quot;flowers&amp;quot;, &amp;quot;grass&amp;quot;,&amp;quot;palm_trees&amp;quot;, &amp;quot;tree&amp;quot;, &amp;quot;trees&amp;quot;)

bob_ross_veg &amp;lt;- bob_ross_gather %&amp;gt;%
  filter(element %in% veggies) 

bob_ross_veg %&amp;gt;%
  group_by(element) %&amp;gt;% 
  summarise(presence = sum(presence)) %&amp;gt;% 
  arrange(-presence) %&amp;gt;% 
  mutate(element = factor(element, levels = element))%&amp;gt;% 
  ggplot(aes(x = element, y = presence)) + 
  geom_point(size=3) + 
  geom_segment(aes(x = element, 
                   xend = element, 
                   y = 0, 
                   yend = presence)) + 
  labs(x = NULL,
       y = &amp;quot;Nº de Pinturas&amp;quot;,
       title = &amp;quot;Elementos vegetais mais presentes nas pinturas de Bob Ross&amp;quot;, 
       caption = &amp;quot;Fonte: Tidy Tuesday (https://github.com/rfordatascience/tidytuesday)&amp;quot;) + 
  coord_flip() +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-06-bob/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Vamos dar uma olhada se algum desses elementos teve alguma grande alteração ao longo dos anos.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bob_ross_veg %&amp;gt;%
  group_by(element, season) %&amp;gt;% 
  summarise(presence = sum(presence)) %&amp;gt;% 
  ungroup() %&amp;gt;% 
  ggplot(aes(x = season, y = presence)) + 
  geom_line(aes(color = element), show.legend = FALSE) +  
  geom_smooth(method = &amp;quot;lm&amp;quot;, se = F, color = &amp;quot;lightgray&amp;quot;) +
  labs(x = NULL,
       y = &amp;quot;Nº de Pinturas&amp;quot;,
       title = &amp;quot;Elementos vegetais mais presentes nas pinturas de Bob Ross ao longo do tempo&amp;quot;, 
       caption = &amp;quot;Fonte: Tidy Tuesday (https://github.com/rfordatascience/tidytuesday)&amp;quot;) + 
  facet_wrap(~element) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-06-bob/index_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Aparentemente Bob Ross era bem consistente em suas pinturas. Também dá pra perceber a maior presença de plantas de climas mais frios (coníferas, decíduas) comparada à frequência daquelas de climas quentes (palmeiras, cactos). Isso continua nos mostrando como suas pinturas geralmente retratavam paisagens mais frias.&lt;/p&gt;
&lt;p&gt;Dá pra notar uma diminuição do número de arbustos e árvores decíduas e um aumento das coníferas. Bob parece ter ido para climas ainda mais frios conforme o tempo passou!&lt;/p&gt;
&lt;p&gt;Abraços!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mulheres no Parlamento ao redor do mundo</title>
      <link>/post/mulheres-no-parlamento-ao-redor-do-mundo/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/mulheres-no-parlamento-ao-redor-do-mundo/</guid>
      <description>


&lt;p&gt;Perdido no Twitter há alguns dias, &lt;a href=&#34;https://twitter.com/ilustat/status/1154401034183352321&#34;&gt;trombei&lt;/a&gt; com a base de dados &lt;a href=&#34;https://github.com/saghirb/Women-in-Parliament-Hex-Sticker&#34;&gt;“Women in Parliament”&lt;/a&gt; do &lt;a href=&#34;https://data.worldbank.org/indicator/SG.GEN.PARL.ZS&#34;&gt;World Bank Data&lt;/a&gt;, uma base imensa de dados mantida pelo Banco Mundial. Existe até um pacote para R, o &lt;code&gt;wbstats&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A base que queremos está disponível via &lt;code&gt;wbstats&lt;/code&gt; e tem o código “SG.GEN.PARL.ZS”. Então vamos buscá-la através do pacote, puxando os dados desde 1997 (quando os dados começaram a ser coletados).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Carregando pacotes exigidos: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(tidyverse, scales, wbstats)

women &amp;lt;- wbstats::wb(indicator = &amp;quot;SG.GEN.PARL.ZS&amp;quot;, 
                     startdate = 1997, 
                     enddate = 2018,
                     country = &amp;quot;countries_only&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos dar uma olhada em como os dados estão estruturados:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;women %&amp;gt;% glimpse()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Observations: 3,971
## Variables: 7
## $ iso3c       &amp;lt;chr&amp;gt; &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;, &amp;quot;AFG&amp;quot;,...
## $ date        &amp;lt;chr&amp;gt; &amp;quot;2018&amp;quot;, &amp;quot;2017&amp;quot;, &amp;quot;2016&amp;quot;, &amp;quot;2015&amp;quot;, &amp;quot;2014&amp;quot;, &amp;quot;2013&amp;quot;, &amp;quot;2012&amp;quot;,...
## $ value       &amp;lt;dbl&amp;gt; 27.7, 27.7, 27.7, 27.7, 27.7, 27.7, 27.7, 27.7, 27.7, 2...
## $ indicatorID &amp;lt;chr&amp;gt; &amp;quot;SG.GEN.PARL.ZS&amp;quot;, &amp;quot;SG.GEN.PARL.ZS&amp;quot;, &amp;quot;SG.GEN.PARL.ZS&amp;quot;, &amp;quot;...
## $ indicator   &amp;lt;chr&amp;gt; &amp;quot;Proportion of seats held by women in national parliame...
## $ iso2c       &amp;lt;chr&amp;gt; &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;AF&amp;quot;, &amp;quot;...
## $ country     &amp;lt;chr&amp;gt; &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanistan&amp;quot;, &amp;quot;Afghanist...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, cada país possui 22 linhas, de 1997 a 2018.&lt;/p&gt;
&lt;p&gt;Em primeiro lugar, eu gostaria de ver como a média mundial está se comportando desde 1997:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;media_mundo &amp;lt;- women %&amp;gt;% 
  group_by(date) %&amp;gt;% 
  summarise(media = mean(value)) 

media_mundo %&amp;gt;% 
  ggplot(aes(x = date, 
             y = media,
             group = 1)) +
  geom_line() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 30)) +
  labs(title = &amp;quot;Percentual Médio de Mulheres nos Parlamentos Nacionais ao redor do mundo&amp;quot;,
       y = &amp;quot;%&amp;quot;,
       x = &amp;quot;Ano&amp;quot;,
       caption = &amp;quot;Fonte: Banco Mundial - Elaborado por Edgar Cutar Junior&amp;quot;) +
  ylim(0,25) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-mulheres/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Bom, o resultado não é nada bom mas, pelo lado positivo, a média mais que dobrou em 20 anos.&lt;/p&gt;
&lt;p&gt;Vamos ver a evolução dos mesmos dados usado o pacote &lt;code&gt;ggridges&lt;/code&gt;, de &lt;a href=&#34;https://twitter.com/ClausWilke&#34;&gt;Claus Wilke&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(ggridges)

women %&amp;gt;% 
  mutate(date = factor(date, levels = 2018:1997)) %&amp;gt;% 
  ggplot(aes(x = value, 
             y = date,
             group = date)) +
  stat_density_ridges(bandwidth = 3, 
                      quantile_lines = TRUE, 
                      quantiles = 2,
                      fill = &amp;quot;red&amp;quot;, 
                      alpha = 0.7) +
  labs(title = &amp;quot;Distribuição de Mulheres nos Parlamentos Nacionais ao redor do mundo&amp;quot;,
       y = NULL,
       x = &amp;quot;%&amp;quot;,
       caption = &amp;quot;Fonte: Banco Mundial - Elaborado por Edgar Cutar Junior&amp;quot;) +
  xlim(0,100) +
  scale_x_continuous(breaks = (0:10)*10) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Scale for &amp;#39;x&amp;#39; is already present. Adding another scale for &amp;#39;x&amp;#39;, which will
## replace the existing scale.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-mulheres/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Nesse segundo gráfico temos um novo panorama, até menos animador. Embora em boa parte do mundo a situação parlamentar tenha evoluído, ainda existe uma boa quantidade de países em que o percentual ainda é muito baixo, abaixo de 10% das cadeiras sendo ocupadas por mulheres.&lt;/p&gt;
&lt;p&gt;Pra finalizar, vamos dar uma olhada na situação do Brasil frente ao resto do mundo. Pra isso, vamos isolar a participação tupininquim das demais.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;brasil &amp;lt;- women %&amp;gt;% 
  group_by(date, isbrazil = country == &amp;quot;Brazil&amp;quot;) %&amp;gt;% 
  summarise(media = mean(value))  

brasil %&amp;gt;% 
  ggplot(aes(x = date, 
             y = media,
             group = isbrazil,
             color = isbrazil)) +
  geom_line() +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 30)) +
  scale_color_viridis_d(end = 0.5, label = c(&amp;quot;Mundo&amp;quot;,&amp;quot;Brasil&amp;quot;)) +
  labs(title = &amp;quot;Percentual Médio de Mulheres nos Parlamentos Nacionais ao redor do mundo&amp;quot;,
       subtitle = &amp;quot;Brasil vs. Mundo&amp;quot;,
       color = NULL,
       y = &amp;quot;%&amp;quot;,
       x = &amp;quot;Ano&amp;quot;,
       caption = &amp;quot;Fonte: Banco Mundial - Elaborado por Edgar Cutar Junior&amp;quot;) +
  ylim(0,25) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-mulheres/index_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Lembra que existiam países muito ruins no último gráfico? Infelizmente vivemos em um deles.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;women %&amp;gt;% 
  filter(date == &amp;quot;2018&amp;quot;) %&amp;gt;% 
  mutate(posicao = row_number(-value),
         percentil = ntile(value, 100),
         numero_de_paises = n()) %&amp;gt;% 
  filter(country == &amp;quot;Brazil&amp;quot;) %&amp;gt;% 
  select(country, posicao, percentil, numero_de_paises, value)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   country posicao percentil numero_de_paises value
## 1  Brazil     157        19              193  10.7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O Brasil ocupa a 157ª posição de 193 países quando o assunto é a representatividade feminina nos parlamentos nacionais. Isso nos deixa no percentil 19, dentro do pior quartil.&lt;/p&gt;
&lt;p&gt;Não sei vocês, mas achei essa situação até pior do que eu achava que seria.&lt;/p&gt;
&lt;p&gt;Espero que isso leve todo mundo a refletir um pouco sobre o assunto.&lt;/p&gt;
&lt;p&gt;Até!&lt;/p&gt;
&lt;p&gt;EDIT: Resolvi plotar num mapa os dados de 2018…
Tive que fazer alguns ajustes com nomes que não batiam, mas ficou assim:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;world &amp;lt;- map_data(&amp;quot;world&amp;quot;) %&amp;gt;%
  mutate(region = case_when(region == &amp;quot;USA&amp;quot; ~ &amp;quot;United States&amp;quot;,
                            region == &amp;quot;Russia&amp;quot; ~ &amp;quot;Russian Federation&amp;quot;,
                            region == &amp;quot;Egypt&amp;quot; ~ &amp;quot;Egypt, Arab Rep.&amp;quot;,
                            region == &amp;quot;Venezuela&amp;quot; ~ &amp;quot;Venezuela, RB&amp;quot;,
                            region == &amp;quot;Democratic Republic of the Congo&amp;quot; ~ &amp;quot;Congo, Rep.&amp;quot;,
                            region == &amp;quot;Iran&amp;quot; ~ &amp;quot;Iran, Islamic Rep.&amp;quot;,
                            region == &amp;quot;Syria&amp;quot; ~ &amp;quot;Syrian Arab Republic&amp;quot;,
                            region == &amp;quot;Yemen&amp;quot; ~ &amp;quot;Yemen, Rep.&amp;quot;,
                            TRUE ~ region)) %&amp;gt;% 
  left_join(women %&amp;gt;%  filter(date == 2018), 
            by = c(&amp;quot;region&amp;quot; = &amp;quot;country&amp;quot;)) 

ggplot(world) +
  geom_polygon(aes(x = long, y = lat, group = group, fill = value)) +
  scale_fill_viridis_c(direction = -1) +
  coord_quickmap() +
  theme_minimal() +
  labs(x = NULL,
       y = NULL, 
       fill = &amp;quot;% de Mulheres no Parlamento Nacional&amp;quot;,
       caption = &amp;quot;Fonte: Banco Mundial - Elaborado por Edgar Cutar Junior&amp;quot;) +
  theme(legend.position = &amp;quot;bottom&amp;quot;,
        axis.text = element_blank()) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-07-29-mulheres/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sobre este blog e a #tidytuesday</title>
      <link>/post/sobre-este-blog-e-a-tidytuesday/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      <guid>/post/sobre-este-blog-e-a-tidytuesday/</guid>
      <description>


&lt;div id=&#34;sobre-o-blog&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Sobre o blog&lt;/h4&gt;
&lt;p&gt;Bom dia! Meu nome é Edgar Cutar Junior, eu sou engenheiro florestal e cada vez mais entusiasta do uso do R para análise de dados.&lt;/p&gt;
&lt;p&gt;Criei este blog inicialmente para participar da &lt;strong&gt;Tidy Tuesday&lt;/strong&gt;. E não só participar, mas de alguma forma contribuir também.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;tidy-tuesday&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Tidy Tuesday&lt;/h4&gt;
&lt;p&gt;Desde 2017, existe um movimento iniciado por &lt;a href=&#34;https://www.jessemaegan.com/&#34;&gt;Jesse Maegan&lt;/a&gt; chamado &lt;a href=&#34;https://www.jessemaegan.com/post/r4ds-the-next-iteration/&#34;&gt;R For Data Science Online Learning Community&lt;/a&gt;. O projeto todo gira em torno da comunidade (sempre vibrante) do R nas redes sociais, e como podemos utilizar dessas redes não só para nos comunicar como para nos ajudarmos uns aos outros.&lt;/p&gt;
&lt;p&gt;Um dos passos pra essa comunidade online se fortalecer é a &lt;a href=&#34;https://thomasmock.netlify.com/post/tidytuesday-a-weekly-social-data-project-in-r/&#34;&gt;Tidy Tuesday&lt;/a&gt;. E como isso funciona? Toda semana, na segunda feira, um banco de dados é postado no &lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34;&gt;GitHub do projeto&lt;/a&gt;. A ideia é que o banco de dados seja um conjunto de dados de alguma forma abrangente sobre um assunto interessante (já foram publicados desde dados dos laureados no prêmio Nobel até uma lista de vinhos com seus &lt;em&gt;ratings&lt;/em&gt; em sites especializados). Todos os dados já são organizados de forma a funcionar bem com o &lt;code&gt;tidyverse&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sabendo isso, a finalidade é pegar estes dados, manipular e gerar um único gráfico com uma informação retirada destes dados.&lt;/p&gt;
&lt;p&gt;Daí pra frente, é postar seu gráfico na terça feira (Tuesday!) com o código no &lt;a href=&#34;twitter.com/edgarcutar&#34;&gt;Twitter&lt;/a&gt; com a hashtag #tidytuesday e correr pro abraço! E, claro, parte da experiência é interagir com as outras pessoas que também participam da Tidy Tuesday.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;os-finalmentes&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Os finalmentes&lt;/h4&gt;
&lt;p&gt;Já há tempos venho acompanhando o projeto e agora resolvi participar. E ao invés de só participar, resolvi criar esse blog onde vou dar o passo a passo de cada gráfico, toda semana (espero).&lt;/p&gt;
&lt;p&gt;Além disso, eventualmente devo falar sobre alguma ferramenta ou base de dados que me chame a atenção.&lt;/p&gt;
&lt;p&gt;Vocês podem me encontrar no meu &lt;a href=&#34;e.cutar@gmail.com&#34;&gt;e-mail&lt;/a&gt;, &lt;a href=&#34;twitter.com/edgar_cutar&#34;&gt;twitter&lt;/a&gt; e no &lt;a href=&#34;instagram.com/edgarcutar&#34;&gt;Instagram&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bem vindos!&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
